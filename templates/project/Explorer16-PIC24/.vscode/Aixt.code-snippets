{
	"aixt.snippet.sleep": {
		"prefix": "sleep",
		"body": "${1|sleep,sleep_ms,sleep_us|}($2)",
		"description": "Sleep functions"
	},
	"aixt.snippet.time": {
		"prefix": "time",
		"body": "time.${1|sleep,sleep_ms,sleep_us|}($2)",
		"description": "Sleep functions with time prefix"
	},
	"aixt.snippet.setup": {
		"prefix": "setup",
		"body": "${1|pin,port,adc,pwm,uart,uart2,sw_uart|}.setup($2)",
		"description": "Generic module setup function"
	},
	"aixt.snippet.read": {
		"prefix": "read",
		"body": "${1|pin,port,adc,uart,uart2,sw_uart|}.read($2)",
		"description": "Generic module reading function"
	},
	"aixt.snippet.write": {
		"prefix": "write",
		"body": "${1|pin,port,pwm,uart,uart2,sw_uart|}.write($2)",
		"description": "Generic module writing function"
	},
	"aixt.snippet.print": {
		"prefix": "print_u",
		"body": "${1|uart,uart2,sw_uart|}.print($2)",
		"description": "Print string to an UART"
	},
	"aixt.snippet.println": {
		"prefix": "println_u",
		"body": "${1|uart,uart2,sw_uart|}.println($2)",
		"description": "Print string + line new to an UART"
	},
	"aixt.snippet.input": {
		"prefix": "input_u",
		"body": "${1|uart,uart2,sw_uart|}.input()",
		"description": "Print string + line new to an UART"
	},
	"aixt.snippet.high": {
		"prefix": "high",
		"body": "pin.high($1)",
		"description": "Put high level to a pin"
	},
	"aixt.snippet.low": {
		"prefix": "low",
		"body": "pin.low($1)",
		"description": "Put low level to a pin"
	},
	"aixt.snippet.toggle": {
		"prefix": "toggle",
		"body": "pin.toggle($1)",
		"description": "Pin toggle level function"
	},
	"aixt.snippet.pin_mode": {
		"prefix": "pin.mode",
		"body": "pin.${1|input,output|}",
		"description": "Pin mode"
	},
	"aixt.snippet.port_pin_mode": {
		"prefix": "port.mode",
		"body": "port.${1|all_inputs,all_outputs|}",
		"description": "Port pin mode constants"
	},
	"aixt.snippet.ADC_input_enable": {
		"prefix": "adc.in",
		"body": "adc.${1|in0,in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15|}",
		"description": "ADC conversion bits constant"
	},
  }