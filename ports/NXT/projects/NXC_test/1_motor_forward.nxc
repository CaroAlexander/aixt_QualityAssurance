// This NXC code was automatically generated by Aixt Project
// Device = Atmel AT91SAM7S256 + Atmel AVR ATmega48
// Board = LEGO Mindstorms NXT intelligent brick
// Backend = nxc

#define 	oparr_sum    	OPARR_SUM
#define 	oparr_mean   	OPARR_MEAN
#define 	oparr_sumsqr 	OPARR_SUMSQR
#define 	oparr_std    	OPARR_STD
#define 	oparr_min    	OPARR_MIN
#define 	oparr_max    	OPARR_MAX
#define 	oparr_sort   	OPARR_SORT
#define 	oparr_toupper	OPARR_TOUPPER
#define 	oparr_tolower	OPARR_TOLOWER
#define 	offset_format_string  	CommandOffsetFormatString
#define 	offset_prc_handler    	CommandOffsetPRCHandler
#define 	offset_tick          	CommandOffsetTick
#define 	offset_offset_ds      	CommandOffsetOffsetDS
#define 	offset_offset_dva     	CommandOffsetOffsetDVA
#define 	offset_prog_status    	CommandOffsetProgStatus
#define 	offset_awake         	CommandOffsetAwake
#define 	offset_activate_flag  	CommandOffsetActivateFlag
#define 	offset_deactivate_flag	CommandOffsetDeactivateFlag
#define 	offset_file_name      	CommandOffsetFileName
#define 	offset_memory_pool    	CommandOffsetMemoryPool
#define 	offset_sync_time      	CommandOffsetSyncTime
#define 	offset_sync_tick      	CommandOffsetSyncTick
#define 	err_comm_chan_not_ready	ERR_COMM_CHAN_NOT_READY
#define 	err_comm_chan_invalid  	ERR_COMM_CHAN_INVALID
#define 	err_comm_buffer_full   	ERR_COMM_BUFFER_FULL
#define 	err_comm_bus_err       	ERR_COMM_BUS_ERR
#define 	err_arg            		ERR_ARG
#define 	err_instr          		ERR_INSTR
#define 	err_file           		ERR_FILE
#define 	err_ver            		ERR_VER
#define 	err_mem            		ERR_MEM
#define 	err_bad_ptr        		ERR_BAD_PTR
#define 	err_clump_count    		ERR_CLUMP_COUNT
#define 	err_no_code        		ERR_NO_CODE
#define 	err_insane_offset  		ERR_INSANE_OFFSET
#define 	err_bad_pool_size  		ERR_BAD_POOL_SIZE
#define 	err_loader_err     		ERR_LOADER_ERR
#define 	err_spotcheck_fail 		ERR_SPOTCHECK_FAIL
#define 	err_no_active_clump		ERR_NO_ACTIVE_CLUMP
#define 	err_default_offsets		ERR_DEFAULT_OFFSETS
#define 	err_memmgr_fail    		ERR_MEMMGR_FAIL
#define 	err_non_fatal      		ERR_NON_FATAL
#define 	err_invalid_port 	ERR_INVALID_PORT
#define 	err_invalid_field	ERR_INVALID_FIELD
#define 	err_invalid_queue	ERR_INVALID_QUEUE
#define 	err_invalid_size 	ERR_INVALID_SIZE
#define 	err_no_prog      	ERR_NO_PROG
#define 	prog_idle   	PROG_IDLE
#define 	prog_ok     	PROG_OK
#define 	prog_running	PROG_RUNNING
#define 	prog_error  	PROG_ERROR
#define 	prog_abort  	PROG_ABORT
#define 	prog_reset  	PROG_RESET
#define 	err_rc_illegal_val	ERR_RC_ILLEGAL_VAL
#define 	err_rc_bad_packet 	ERR_RC_BAD_PACKET
#define 	err_rc_unknown_cmd	ERR_RC_UNKNOWN_CMD
#define 	err_rc_failed     	ERR_RC_FAILED
#define 	file_open_read          	FileOpenRead
#define 	file_open_write         	FileOpenWrite
#define 	file_open_append        	FileOpenAppend
#define 	file_read              		FileRead
#define 	file_write             		FileWrite
#define 	file_close             		FileClose
#define 	file_resolve_handle     	FileResolveHandle
#define 	file_rename            		FileRename
#define 	file_delete            		FileDelete
#define 	sound_play_file         	SoundPlayFile
#define 	sound_play_tone         	SoundPlayTone
#define 	sound_get_state         	SoundGetState
#define 	sound_set_state         	SoundSetState
#define 	draw_text              		DrawText
#define 	draw_point             		DrawPoint
#define 	draw_line              		DrawLine
#define 	draw_circle            		DrawCircle
#define 	draw_rect              		DrawRect
#define 	draw_graphic           		DrawGraphic
#define 	set_screen_mode         	SetScreenMode
#define 	read_button            		ReadButton
#define 	comm_ls_write           	CommLSWrite
#define 	comm_ls_read            	CommLSRead
#define 	comm_ls_check_status     	CommLSCheckStatus
#define 	random_number          		RandomNumber
#define 	get_start_tick          	GetStartTick
#define 	message_write          		MessageWrite
#define 	message_read           		MessageRead
#define 	comm_bt_check_status     	CommBTCheckStatus
#define 	comm_bt_write           	CommBTWrite
#define 	comm_bt_read            	CommBTRead
#define 	keep_alive             		KeepAlive
#define 	io_map_read             	IOMapRead
#define 	io_map_write            	IOMapWrite
#define 	color_sensor_read       	ColorSensorRead
#define 	comm_bt_on_off           	CommBTOnOff
#define 	comm_bt_connection      	CommBTConnection
#define 	comm_hs_write           	CommHSWrite
#define 	comm_hs_read            	CommHSRead
#define 	comm_hs_check_status     	CommHSCheckStatus
#define 	read_sem_data           	ReadSemData
#define 	write_sem_data          	WriteSemData
#define 	compute_calib_value     	ComputeCalibValue
#define 	update_calib_cache_info  	UpdateCalibCacheInfo
#define 	datalog_write          		DatalogWrite
#define 	datalog_get_times       	DatalogGetTimes
#define 	set_sleep_timeout_val    	SetSleepTimeoutVal
#define 	list_files             		ListFiles
#define 	input_pin_function      	InputPinFunction
#define 	io_map_read_by_id         	IOMapReadByID
#define 	io_map_write_by_id        	IOMapWriteByID
#define 	display_execute_function	DisplayExecuteFunction
#define 	comm_execute_function   	CommExecuteFunction
#define 	loader_execute_function 	LoaderExecuteFunction
#define 	file_find_first         	FileFindFirst
#define 	file_find_next          	FileFindNext
#define 	file_open_write_linear   	FileOpenWriteLinear
#define 	file_open_write_non_linear	FileOpenWriteNonLinear
#define 	file_open_read_linear    	FileOpenReadLinear
#define 	comm_hs_control         	CommHSControl
#define 	comm_ls_write_ex         	CommLSWriteEx
#define 	file_seek              		FileSeek
#define 	file_resize            		FileResize
#define 	draw_graphic_array      	DrawGraphicArray
#define 	draw_polygon           		DrawPolygon
#define 	draw_ellipse           		DrawEllipse
#define 	draw_font              		DrawFont
#define 	memory_manager         		MemoryManager
#define 	read_last_response      	ReadLastResponse
#define 	file_tell            	  	FileTell
#define 	random_ex              		RandomEx
#define 	note_whole  	NOTE_WHOLE
#define 	note_half   	NOTE_HALF
#define 	note_quarter	NOTE_QUARTER
#define 	note_eight  	NOTE_EIGHT
#define 	note_sixteen	NOTE_SIXTEEN
#define 	times_up     	TIMES_UP
#define 	rotate_queue 	ROTATE_QUEUE
#define 	stop_req     	STOP_REQ
#define 	breakout_req 	BREAKOUT_REQ
#define 	clump_suspend	CLUMP_SUSPEND
#define 	clump_done   	CLUMP_DONE
#define 	stat_msg_empty_mailbox	STAT_MSG_EMPTY_MAILBOX
#define 	stat_comm_pending     	STAT_COMM_PENDING
#define 	pool_max_size         	POOL_MAX_SIZE
#define 	no_err                	NO_ERR
#define     current_tick(...)                  CurrentTick(__VA_ARGS__)
#define     first_tick(...)                    FirstTick(__VA_ARGS__)
#define     reset_sleep_timer(...)             ResetSleepTimer(__VA_ARGS__)
#define     sys_call(...)                      SysCall(__VA_ARGS__)
#define     sys_get_start_tick(...)            SysGetStartTick(__VA_ARGS__)
#define     sys_keep_alive(...)                SysKeepAlive(__VA_ARGS__)
#define     sys_io_map_read(...)               SysIOMapRead(__VA_ARGS__)
#define     sys_io_map_write(...)              SysIOMapWrite(__VA_ARGS__)
#define     sys_io_map_read_by_id(...)         SysIOMapReadByID(__VA_ARGS__)
#define     sys_io_map_write_by_id(...)        SysIOMapWriteByID(__VA_ARGS__)
#define     sys_datalog_write(...)             SysDatalogWrite(__VA_ARGS__)
#define     sys_datalog_get_times(...)         SysDatalogGetTimes(__VA_ARGS__)
#define     sys_read_sem_data(...)             SysReadSemData(__VA_ARGS__)
#define     sys_write_sem_data(...)            SysWriteSemData(__VA_ARGS__)
#define     sys_update_calib_cache_info(...)   SysUpdateCalibCacheInfo(__VA_ARGS__)
#define     sys_compute_calib_value(...)       SysComputeCalibValue(__VA_ARGS__)
#define     get_memory_info(...)               GetMemoryInfo(__VA_ARGS__)
#define     sys_memory_manager(...)            SysMemoryManager(__VA_ARGS__)
#define     get_last_response_info(...)        GetLastResponseInfo(__VA_ARGS__)
#define     sys_read_last_response(...)        SysReadLastResponse(__VA_ARGS__)
#define     sleep_ms(...)                      Wait(__VA_ARGS__)					//custom
#define     yield(...)                         Yield(__VA_ARGS__)
#define     stop_all_tasks(...)                StopAllTasks(__VA_ARGS__)
#define     stop_program(...)                  Stop(__VA_ARGS__)
#define     exit_to(...)                       ExitTo(__VA_ARGS__)
#define     precedes(...)                      Precedes(__VA_ARGS__)
#define     follows(...)                       Follows(__VA_ARGS__)
#define     acquire(...)                       Acquire(__VA_ARGS__)
#define     release(...)                       Release(__VA_ARGS__)
#define     start_task(...)                    StartTask(__VA_ARGS__)
#define     stop_task(...)                     StopTask(__VA_ARGS__)
#define     branch_test(...)                   BranchTest(__VA_ARGS__)
#define     branch_comp(...)                   BranchComp(__VA_ARGS__)
#define     set_io_map_bytes(...)              SetIOMapBytes(__VA_ARGS__)
#define     set_io_map_value(...)              SetIOMapValue(__VA_ARGS__)
#define     get_io_map_bytes(...)              GetIOMapBytes(__VA_ARGS__)
#define     get_io_map_value(...)              GetIOMapValue(__VA_ARGS__)
#define     get_low_speed_module_bytes(...)    GetLowSpeedModuleBytes(__VA_ARGS__)
#define     get_display_module_bytes(...)      GetDisplayModuleBytes(__VA_ARGS__)
#define     get_comm_module_bytes(...)         GetCommModuleBytes(__VA_ARGS__)
#define     get_command_module_bytes(...)      GetCommandModuleBytes(__VA_ARGS__)
#define     set_command_module_bytes(...)      SetCommandModuleBytes(__VA_ARGS__)
#define     set_low_speed_module_bytes(...)    SetLowSpeedModuleBytes(__VA_ARGS__)
#define     set_display_module_bytes(...)      SetDisplayModuleBytes(__VA_ARGS__)
#define     set_comm_module_bytes(...)         SetCommModuleBytes(__VA_ARGS__)
#define     set_sound_module_bytes(...)        SetSoundModuleBytes(__VA_ARGS__)
#define     set_io_map_bytes_by_id(...)        SetIOMapBytesByID(__VA_ARGS__)
#define     set_io_map_value_by_id(...)        SetIOMapValueByID(__VA_ARGS__)
#define     get_io_map_bytes_by_id(...)        GetIOMapBytesByID(__VA_ARGS__)
#define     get_io_map_value_by_id(...)        GetIOMapValueByID(__VA_ARGS__)
#define     set_command_module_value(...)      SetCommandModuleValue(__VA_ARGS__)
#define     set_io_ctrl_module_value(...)      SetIOCtrlModuleValue(__VA_ARGS__)
#define     set_loader_module_value(...)       SetLoaderModuleValue(__VA_ARGS__)
#define     set_ui_module_value(...)           SetUIModuleValue(__VA_ARGS__)
#define     set_sound_module_value(...)        SetSoundModuleValue(__VA_ARGS__)
#define     set_button_module_value(...)       SetButtonModuleValue(__VA_ARGS__)
#define     set_input_module_value(...)        SetInputModuleValue(__VA_ARGS__)
#define     set_output_module_value(...)       SetOutputModuleValue(__VA_ARGS__)
#define     set_low_speed_module_value(...)    SetLowSpeedModuleValue(__VA_ARGS__)
#define     set_display_module_value(...)      SetDisplayModuleValue(__VA_ARGS__)
#define     set_comm_module_value(...)         SetCommModuleValue(__VA_ARGS__)
#define     get_command_module_value(...)      GetCommandModuleValue(__VA_ARGS__)
#define     get_loader_module_value(...)       GetLoaderModuleValue(__VA_ARGS__)
#define     get_sound_module_value(...)        GetSoundModuleValue(__VA_ARGS__)
#define     get_button_module_value(...)       GetButtonModuleValue(__VA_ARGS__)
#define     get_ui_module_value(...)           GetUIModuleValue(__VA_ARGS__)
#define     get_input_module_value(...)        GetInputModuleValue(__VA_ARGS__)
#define     get_output_module_value(...)       GetOutputModuleValue(__VA_ARGS__)
#define     get_low_speed_module_value(...)    GetLowSpeedModuleValue(__VA_ARGS__)
#define     get_display_module_value(...)      GetDisplayModuleValue(__VA_ARGS__)
#define     get_comm_module_value(...)         GetCommModuleValue(__VA_ARGS__)
#define		sleep(TS)							Wait(TS*1000)		//custom
#define 	io_ctrl_offset_power_on		IOCtrlOffsetPowerOn
#define 	io_ctrl_powerdown	IOCTRL_POWERDOWN
#define 	io_ctrl_boot     	IOCTRL_BOOT
#define     power_down(...)              PowerDown(__VA_ARGS__)
#define     sleep_now(...)               SleepNow(__VA_ARGS__)
#define     reboot_in_firmware_mode(...) RebootInFirmwareMode(__VA_ARGS__)
#define     update_flags_field      UpdateFlagsField
#define     output_mode_field       OutputModeField
#define     power_field             PowerField
#define     actual_speed_field      ActualSpeedField
#define     tacho_count_field       TachoCountField
#define     tacho_limit_field       TachoLimitField
#define     run_state_field         RunStateField
#define     turn_ratio_field        TurnRatioField
#define     reg_mode_field          RegModeField
#define     overload_field          OverloadField
#define     reg_p_value_field       RegPValueField
#define     reg_i_value_field       RegIValueField
#define     reg_d_value_field       RegDValueField
#define     block_tacho_count_field BlockTachoCountField
#define     rotation_count_field    RotationCountField
#define     output_options_field    OutputOptionsField
#define     max_speed_field         MaxSpeedField
#define     max_acceleration_field  MaxAccelerationField
#define     offset_tacho_count          OutputOffsetTachoCount
#define     offset_block_tacho_count    OutputOffsetBlockTachoCount
#define     offset_rotation_count       OutputOffsetRotationCount
#define     offset_tacho_limit          OutputOffsetTachoLimit
#define     offset_motor_rpm            OutputOffsetMotorRPM
#define     offset_flags                OutputOffsetFlags
#define     offset_mode                 OutputOffsetMode
#define     offset_speed                OutputOffsetSpeed
#define     offset_actual_speed         OutputOffsetActualSpeed
#define     offset_reg_p_parameter      OutputOffsetRegPParameter
#define     offset_reg_i_parameter      OutputOffsetRegIParameter
#define     offset_reg_d_parameter      OutputOffsetRegDParameter
#define     offset_run_state            OutputOffsetRunState
#define     offset_reg_mode             OutputOffsetRegMode
#define     offset_overloaded           OutputOffsetOverloaded
#define     offset_sync_turn_parameter  OutputOffsetSyncTurnParameter
#define     offset_options              OutputOffsetOptions
#define     offset_max_speed            OutputOffsetMaxSpeed
#define     offset_max_accel            OutputOffsetMaxAccel
#define     offset_regulation_time      OutputOffsetRegulationTime
#define     offset_regulation_options   OutputOffsetRegulationOptions
#define 	a	OUT_A
#define 	b	OUT_B
#define 	c	OUT_C
#define 	ab	OUT_AB
#define 	ac	OUT_AC
#define 	bc	OUT_BC
#define 	abc	OUT_ABC
#define     mode_coast      OUT_MODE_COAST
#define     mode_motoron    OUT_MODE_MOTORON
#define     mode_brake      OUT_MODE_BRAKE
#define     mode_regulated  OUT_MODE_REGULATED
#define     mode_regmethod  OUT_MODE_REGMETHOD
#define 	option_holdatlimit    	OUT_OPTION_HOLDATLIMIT
#define 	option_rampdowntolimit	OUT_OPTION_RAMPDOWNTOLIMIT
#define 	regmode_idle    OUT_REGMODE_IDLE
#define 	regmode_speed   OUT_REGMODE_SPEED
#define 	regmode_sync    OUT_REGMODE_SYNC
#define 	regmode_pos     OUT_REGMODE_POS
#define 	runstate_idle       OUT_RUNSTATE_IDLE
#define 	runstate_rampup     OUT_RUNSTATE_RAMPUP
#define 	runstate_running    OUT_RUNSTATE_RUNNING
#define 	runstate_rampdown   OUT_RUNSTATE_RAMPDOWN
#define 	runstate_hold       OUT_RUNSTATE_HOLD
#define 	uf_update_mode                  UF_UPDATE_MODE
#define 	uf_update_speed                 UF_UPDATE_SPEED
#define 	uf_update_tacho_limit           UF_UPDATE_TACHO_LIMIT
#define 	uf_update_reset_count           UF_UPDATE_RESET_COUNT
#define 	uf_update_pid_values            UF_UPDATE_PID_VALUES
#define 	uf_update_reset_block_count     UF_UPDATE_RESET_BLOCK_COUNT
#define 	uf_update_reset_rotation_count  UF_UPDATE_RESET_ROTATION_COUNT
#define 	uf_pending_updates              UF_PENDING_UPDATES
#define 	regoption_no_saturation		OUT_REGOPTION_NO_SATURATION
#define 	pid_0   PID_0
#define 	pid_1   PID_1
#define 	pid_2   PID_2
#define 	pid_3   PID_3
#define 	pid_4   PID_4
#define 	pid_5   PID_5
#define 	pid_6   PID_6
#define 	pid_7   PID_7
#define 	reset_none              RESET_NONE
#define 	reset_count             RESET_COUNT
#define 	reset_block_count       RESET_BLOCK_COUNT
#define 	reset_rotation_count    RESET_ROTATION_COUNT
#define 	reset_blockandtacho     RESET_BLOCKANDTACHO
#define 	reset_all               RESET_ALL
#define     motor__set_pwn_freq(...)             SetMotorPwnFreq(__VA_ARGS__)
#define     motor__set_regulation_time(...)      SetMotorRegulationTime(__VA_ARGS__)
#define     motor__set_regulation_options(...)   SetMotorRegulationOptions(__VA_ARGS__)
#define     motor__forward_sync_pid(...)         OnFwdSyncPID(__VA_ARGS__)
#define     motor__forward_sync_ex_pid(...)      OnFwdSyncExPID(__VA_ARGS__)
#define     motor__reverse_sync_pid(...)         OnRevSyncPID(__VA_ARGS__)
#define     motor__reverse_sync_ex_pid(...)      OnRevSyncExPID(__VA_ARGS__)
#define     motor__forward_reg_pid(...)          OnFwdRegPID(__VA_ARGS__)
#define     motor__forward_reg_ex_pid(...)       OnFwdRegExPID(__VA_ARGS__)
#define     motor__reverse_reg_pid(...)          OnRevRegPID(__VA_ARGS__)
#define     motor__reverse_reg_ex_pid(...)       OnRevRegExPID(__VA_ARGS__)
#define     motor__off(...)                      Off(__VA_ARGS__)
#define     motor__off_ex(...)                   OffEx(__VA_ARGS__)
#define     motor__coast(...)                    Coast(__VA_ARGS__)
#define     motor__coast_ex(...)                 CoastEx(__VA_ARGS__)
#define     motor__float(...)                    Float(__VA_ARGS__)
#define     motor__forward(...)             	 OnFwd(__VA_ARGS__)
#define     motor__forward_ex(...)               OnFwdEx(__VA_ARGS__)
#define     motor__reverse(...)                  OnRev(__VA_ARGS__)
#define     motor__reverse_ex(...)               OnRevEx(__VA_ARGS__)
#define     motor__forward_reg(...)              OnFwdReg(__VA_ARGS__)
#define     motor__forward_reg_ex(...)           OnFwdRegEx(__VA_ARGS__)
#define     motor__reverse_reg(...)              OnRevReg(__VA_ARGS__)
#define     motor__reverse_reg_ex(...)           OnRevRegEx(__VA_ARGS__)
#define     motor__forward_sync(...)             OnFwdSync(__VA_ARGS__)
#define     motor__forward_sync_ex(...)          OnFwdSyncEx(__VA_ARGS__)
#define     motor__reverse_sync(...)             OnRevSync(__VA_ARGS__)
#define     motor__reverse_sync_ex(...)          OnRevSyncEx(__VA_ARGS__)
#define     motor__rotate(...)                   RotateMotor(__VA_ARGS__)
#define     motor__rotate_pid(...)               RotateMotorPID(__VA_ARGS__)
#define     motor__rotate_ex(...)                RotateMotorEx(__VA_ARGS__)
#define     motor__rotate_ex_pid(...)            RotateMotorExPID(__VA_ARGS__)
#define     motor__reset_tacho_count(...)        ResetTachoCount(__VA_ARGS__)
#define     motor__reset_block_tacho_count(...)  ResetBlockTachoCount(__VA_ARGS__)
#define     motor__reset_rotation_count(...)     ResetRotationCount(__VA_ARGS__)
#define     motor__reset_all_tacho_counts(...)   ResetAllTachoCounts(__VA_ARGS__)
#define     motor__mode(...)                     MotorMode(__VA_ARGS__)
#define     motor__power(...)                    MotorPower(__VA_ARGS__)
#define     motor__actual_speed(...)             MotorActualSpeed(__VA_ARGS__)
#define     motor__tacho_count(...)              MotorTachoCount(__VA_ARGS__)
#define     motor__tacho_limit(...)              MotorTachoLimit(__VA_ARGS__)
#define     motor__run_state(...)                MotorRunState(__VA_ARGS__)
#define     motor__turn_ratio(...)               MotorTurnRatio(__VA_ARGS__)
#define     motor__regulation(...)               MotorRegulation(__VA_ARGS__)
#define     motor__overload(...)                 MotorOverload(__VA_ARGS__)
#define     motor__reg_p_value(...)              MotorRegPValue(__VA_ARGS__)
#define     motor__reg_i_value(...)              MotorRegIValue(__VA_ARGS__)
#define     motor__reg_d_value(...)              MotorRegDValue(__VA_ARGS__)
#define     motor__block_tacho_count(...)        MotorBlockTachoCount(__VA_ARGS__)
#define     motor__rotation_count(...)           MotorRotationCount(__VA_ARGS__)
#define     motor__output_options(...)           MotorOutputOptions(__VA_ARGS__)
#define     motor__max_speed(...)                MotorMaxSpeed(__VA_ARGS__)
#define     motor__max_acceleration(...)         MotorMaxAcceleration(__VA_ARGS__)
#define     motor__pwn_freq(...)                 MotorPwnFreq(__VA_ARGS__)
#define     motor__regulation_time(...)          MotorRegulationTime(__VA_ARGS__)
#define     motor__regulation_options(...)       MotorRegulationOptions(__VA_ARGS__)
#define     set_output(...)               	     SetOutput(__VA_ARGS__)
#define     get_output(...)               	     GetOutput(__VA_ARGS__)
#define     pos_reg_enable(...)           	     PosRegEnable(__VA_ARGS__)
#define     pos_reg_set_angle(...)        	     PosRegSetAngle(__VA_ARGS__)
#define     pos_reg_add_angle(...)        	     PosRegAddAngle(__VA_ARGS__)
#define     pos_reg_set_max(...)          	     PosRegSetMax(__VA_ARGS__)

void main__init();

void motor__init();

void main__init() {
	motor__init();
	
}

void motor__init() {
}
const long t_on = 1000;

task main() {
	main__init();
	motor__forward(ab, 50);
	sleep_ms(t_on);
	motor__off(ab);
}
