// This NXC code was automatically generated by Aixt Project
// Device = Atmel AT91SAM7S256 + Atmel AVR ATmega48
// Board = LEGO Mindstorms NXT intelligent brick
// Backend = nxc

#define 	offset_format_string  	CommandOffsetFormatString
#define 	offset_prc_handler    	CommandOffsetPRCHandler
#define 	offset_tick          	CommandOffsetTick
#define 	offset_offset_ds      	CommandOffsetOffsetDS
#define 	offset_offset_dva     	CommandOffsetOffsetDVA
#define 	offset_prog_status    	CommandOffsetProgStatus
#define 	offset_awake         	CommandOffsetAwake
#define 	offset_activate_flag  	CommandOffsetActivateFlag
#define 	offset_deactivate_flag	CommandOffsetDeactivateFlag
#define 	offset_file_name      	CommandOffsetFileName
#define 	offset_memory_pool    	CommandOffsetMemoryPool
#define 	offset_sync_time      	CommandOffsetSyncTime
#define 	offset_sync_tick      	CommandOffsetSyncTick
#define 	err_comm_chan_not_ready	ERR_COMM_CHAN_NOT_READY
#define 	err_comm_chan_invalid  	ERR_COMM_CHAN_INVALID
#define 	err_comm_buffer_full   	ERR_COMM_BUFFER_FULL
#define 	err_comm_bus_err       	ERR_COMM_BUS_ERR
#define 	err_arg            		ERR_ARG
#define 	err_instr          		ERR_INSTR
#define 	err_file           		ERR_FILE
#define 	err_ver            		ERR_VER
#define 	err_mem            		ERR_MEM
#define 	err_bad_ptr        		ERR_BAD_PTR
#define 	err_clump_count    		ERR_CLUMP_COUNT
#define 	err_no_code        		ERR_NO_CODE
#define 	err_insane_offset  		ERR_INSANE_OFFSET
#define 	err_bad_pool_size  		ERR_BAD_POOL_SIZE
#define 	err_loader_err     		ERR_LOADER_ERR
#define 	err_spotcheck_fail 		ERR_SPOTCHECK_FAIL
#define 	err_no_active_clump		ERR_NO_ACTIVE_CLUMP
#define 	err_default_offsets		ERR_DEFAULT_OFFSETS
#define 	err_memmgr_fail    		ERR_MEMMGR_FAIL
#define 	err_non_fatal      		ERR_NON_FATAL
#define 	err_invalid_port 	ERR_INVALID_PORT
#define 	err_invalid_field	ERR_INVALID_FIELD
#define 	err_invalid_queue	ERR_INVALID_QUEUE
#define 	err_invalid_size 	ERR_INVALID_SIZE
#define 	err_no_prog      	ERR_NO_PROG
#define 	prog_idle   	PROG_IDLE
#define 	prog_ok     	PROG_OK
#define 	prog_running	PROG_RUNNING
#define 	prog_error  	PROG_ERROR
#define 	prog_abort  	PROG_ABORT
#define 	prog_reset  	PROG_RESET
#define 	err_rc_illegal_val	ERR_RC_ILLEGAL_VAL
#define 	err_rc_bad_packet 	ERR_RC_BAD_PACKET
#define 	err_rc_unknown_cmd	ERR_RC_UNKNOWN_CMD
#define 	err_rc_failed     	ERR_RC_FAILED
#define 	file_open_read          	FileOpenRead
#define 	file_open_write         	FileOpenWrite
#define 	file_open_append        	FileOpenAppend
#define 	file_read              		FileRead
#define 	file_write             		FileWrite
#define 	file_close             		FileClose
#define 	file_resolve_handle     	FileResolveHandle
#define 	file_rename            		FileRename
#define 	file_delete            		FileDelete
#define 	sound_play_file         	SoundPlayFile
#define 	sound_play_tone         	SoundPlayTone
#define 	sound_get_state         	SoundGetState
#define 	sound_set_state         	SoundSetState
#define 	draw_text              		DrawText
#define 	draw_point             		DrawPoint
#define 	draw_line              		DrawLine
#define 	draw_circle            		DrawCircle
#define 	draw_rect              		DrawRect
#define 	draw_graphic           		DrawGraphic
#define 	set_screen_mode         	SetScreenMode
#define 	read_button            		ReadButton
#define 	comm_ls_write           	CommLSWrite
#define 	comm_ls_read            	CommLSRead
#define 	comm_ls_check_status     	CommLSCheckStatus
#define 	random_number          		RandomNumber
#define 	get_start_tick          	GetStartTick
#define 	message_write          		MessageWrite
#define 	message_read           		MessageRead
#define 	comm_bt_check_status     	CommBTCheckStatus
#define 	comm_bt_write           	CommBTWrite
#define 	comm_bt_read            	CommBTRead
#define 	keep_alive             		KeepAlive
#define 	io_map_read             	IOMapRead
#define 	io_map_write            	IOMapWrite
#define 	color_sensor_read       	ColorSensorRead
#define 	comm_bt_on_off           	CommBTOnOff
#define 	comm_bt_connection      	CommBTConnection
#define 	comm_hs_write           	CommHSWrite
#define 	comm_hs_read            	CommHSRead
#define 	comm_hs_check_status     	CommHSCheckStatus
#define 	read_sem_data           	ReadSemData
#define 	write_sem_data          	WriteSemData
#define 	compute_calib_value     	ComputeCalibValue
#define 	update_calib_cache_info  	UpdateCalibCacheInfo
#define 	datalog_write          		DatalogWrite
#define 	datalog_get_times       	DatalogGetTimes
#define 	set_sleep_timeout_val    	SetSleepTimeoutVal
#define 	list_files             		ListFiles
#define 	input_pin_function      	InputPinFunction
#define 	io_map_read_by_id         	IOMapReadByID
#define 	io_map_write_by_id        	IOMapWriteByID
#define 	display_execute_function	DisplayExecuteFunction
#define 	comm_execute_function   	CommExecuteFunction
#define 	loader_execute_function 	LoaderExecuteFunction
#define 	file_find_first         	FileFindFirst
#define 	file_find_next          	FileFindNext
#define 	file_open_write_linear   	FileOpenWriteLinear
#define 	file_open_write_non_linear	FileOpenWriteNonLinear
#define 	file_open_read_linear    	FileOpenReadLinear
#define 	comm_hs_control         	CommHSControl
#define 	comm_ls_write_ex         	CommLSWriteEx
#define 	file_seek              		FileSeek
#define 	file_resize            		FileResize
#define 	draw_graphic_array      	DrawGraphicArray
#define 	draw_polygon           		DrawPolygon
#define 	draw_ellipse           		DrawEllipse
#define 	draw_font              		DrawFont
#define 	memory_manager         		MemoryManager
#define 	read_last_response      	ReadLastResponse
#define 	file_tell            	  	FileTell
#define 	random_ex              		RandomEx
#define 	note_whole  	NOTE_WHOLE
#define 	note_half   	NOTE_HALF
#define 	note_quarter	NOTE_QUARTER
#define 	note_eight  	NOTE_EIGHT
#define 	note_sixteen	NOTE_SIXTEEN
#define 	times_up     	TIMES_UP
#define 	rotate_queue 	ROTATE_QUEUE
#define 	stop_req     	STOP_REQ
#define 	breakout_req 	BREAKOUT_REQ
#define 	clump_suspend	CLUMP_SUSPEND
#define 	clump_done   	CLUMP_DONE
#define 	stat_msg_empty_mailbox	STAT_MSG_EMPTY_MAILBOX
#define 	stat_comm_pending     	STAT_COMM_PENDING
#define 	pool_max_size         	POOL_MAX_SIZE
#define 	no_err                	NO_ERR
#define 	lt   	LT
#define 	gt   	GT
#define 	lteq   	LTEQ
#define 	gteq   	GTEQ
#define 	eq   	EQ
#define 	neq   	NEQ
#define     current_tick(...)                  CurrentTick(__VA_ARGS__)
#define     first_tick(...)                    FirstTick(__VA_ARGS__)
#define     reset_sleep_timer(...)             ResetSleepTimer(__VA_ARGS__)
#define     sys_call(...)                      SysCall(__VA_ARGS__)
#define     sys_get_start_tick(...)            SysGetStartTick(__VA_ARGS__)
#define     sys_keep_alive(...)                SysKeepAlive(__VA_ARGS__)
#define     sys_io_map_read(...)               SysIOMapRead(__VA_ARGS__)
#define     sys_io_map_write(...)              SysIOMapWrite(__VA_ARGS__)
#define     sys_io_map_read_by_id(...)         SysIOMapReadByID(__VA_ARGS__)
#define     sys_io_map_write_by_id(...)        SysIOMapWriteByID(__VA_ARGS__)
#define     sys_datalog_write(...)             SysDatalogWrite(__VA_ARGS__)
#define     sys_datalog_get_times(...)         SysDatalogGetTimes(__VA_ARGS__)
#define     sys_read_sem_data(...)             SysReadSemData(__VA_ARGS__)
#define     sys_write_sem_data(...)            SysWriteSemData(__VA_ARGS__)
#define     sys_update_calib_cache_info(...)   SysUpdateCalibCacheInfo(__VA_ARGS__)
#define     sys_compute_calib_value(...)       SysComputeCalibValue(__VA_ARGS__)
#define     get_memory_info(...)               GetMemoryInfo(__VA_ARGS__)
#define     sys_memory_manager(...)            SysMemoryManager(__VA_ARGS__)
#define     get_last_response_info(...)        GetLastResponseInfo(__VA_ARGS__)
#define     sys_read_last_response(...)        SysReadLastResponse(__VA_ARGS__)
#define     sleep_ms(...)                      Wait(__VA_ARGS__)					//custom
#define     yield(...)                         Yield(__VA_ARGS__)
#define     stop_all_tasks(...)                StopAllTasks(__VA_ARGS__)
#define     stop_program(...)                  Stop(__VA_ARGS__)
#define     exit_to(...)                       ExitTo(__VA_ARGS__)
#define     precedes(...)                      Precedes(__VA_ARGS__)
#define     follows(...)                       Follows(__VA_ARGS__)
#define     acquire(...)                       Acquire(__VA_ARGS__)
#define     release(...)                       Release(__VA_ARGS__)
#define     start_task(...)                    StartTask(__VA_ARGS__)
#define     stop_task(...)                     StopTask(__VA_ARGS__)
#define     branch_test(...)                   BranchTest(__VA_ARGS__)
#define     branch_comp(...)                   BranchComp(__VA_ARGS__)
#define     set_io_map_bytes(...)              SetIOMapBytes(__VA_ARGS__)
#define     set_io_map_value(...)              SetIOMapValue(__VA_ARGS__)
#define     get_io_map_bytes(...)              GetIOMapBytes(__VA_ARGS__)
#define     get_io_map_value(...)              GetIOMapValue(__VA_ARGS__)
#define     get_low_speed_module_bytes(...)    GetLowSpeedModuleBytes(__VA_ARGS__)
#define     get_display_module_bytes(...)      GetDisplayModuleBytes(__VA_ARGS__)
#define     get_comm_module_bytes(...)         GetCommModuleBytes(__VA_ARGS__)
#define     get_command_module_bytes(...)      GetCommandModuleBytes(__VA_ARGS__)
#define     set_command_module_bytes(...)      SetCommandModuleBytes(__VA_ARGS__)
#define     set_low_speed_module_bytes(...)    SetLowSpeedModuleBytes(__VA_ARGS__)
#define     set_display_module_bytes(...)      SetDisplayModuleBytes(__VA_ARGS__)
#define     set_comm_module_bytes(...)         SetCommModuleBytes(__VA_ARGS__)
#define     set_sound_module_bytes(...)        SetSoundModuleBytes(__VA_ARGS__)
#define     set_io_map_bytes_by_id(...)        SetIOMapBytesByID(__VA_ARGS__)
#define     set_io_map_value_by_id(...)        SetIOMapValueByID(__VA_ARGS__)
#define     get_io_map_bytes_by_id(...)        GetIOMapBytesByID(__VA_ARGS__)
#define     get_io_map_value_by_id(...)        GetIOMapValueByID(__VA_ARGS__)
#define     set_command_module_value(...)      SetCommandModuleValue(__VA_ARGS__)
#define     set_io_ctrl_module_value(...)      SetIOCtrlModuleValue(__VA_ARGS__)
#define     set_loader_module_value(...)       SetLoaderModuleValue(__VA_ARGS__)
#define     set_ui_module_value(...)           SetUIModuleValue(__VA_ARGS__)
#define     set_sound_module_value(...)        SetSoundModuleValue(__VA_ARGS__)
#define     set_button_module_value(...)       SetButtonModuleValue(__VA_ARGS__)
#define     set_input_module_value(...)        SetInputModuleValue(__VA_ARGS__)
#define     set_output_module_value(...)       SetOutputModuleValue(__VA_ARGS__)
#define     set_low_speed_module_value(...)    SetLowSpeedModuleValue(__VA_ARGS__)
#define     set_display_module_value(...)      SetDisplayModuleValue(__VA_ARGS__)
#define     set_comm_module_value(...)         SetCommModuleValue(__VA_ARGS__)
#define     get_command_module_value(...)      GetCommandModuleValue(__VA_ARGS__)
#define     get_loader_module_value(...)       GetLoaderModuleValue(__VA_ARGS__)
#define     get_sound_module_value(...)        GetSoundModuleValue(__VA_ARGS__)
#define     get_button_module_value(...)       GetButtonModuleValue(__VA_ARGS__)
#define     get_ui_module_value(...)           GetUIModuleValue(__VA_ARGS__)
#define     get_input_module_value(...)        GetInputModuleValue(__VA_ARGS__)
#define     get_output_module_value(...)       GetOutputModuleValue(__VA_ARGS__)
#define     get_low_speed_module_value(...)    GetLowSpeedModuleValue(__VA_ARGS__)
#define     get_display_module_value(...)      GetDisplayModuleValue(__VA_ARGS__)
#define     get_comm_module_value(...)         GetCommModuleValue(__VA_ARGS__)
#define		sleep(TS)							Wait(TS*1000)		//custom
#define 	io_ctrl_offset_power_on		IOCtrlOffsetPowerOn
#define 	io_ctrl_powerdown	IOCTRL_POWERDOWN
#define 	io_ctrl_boot     	IOCTRL_BOOT
#define     power_down(...)              PowerDown(__VA_ARGS__)
#define     sleep_now(...)               SleepNow(__VA_ARGS__)
#define     reboot_in_firmware_mode(...) RebootInFirmwareMode(__VA_ARGS__)
#define 	cal_point_0 	INPUT_CAL_POINT_0
#define 	cal_point_1 	INPUT_CAL_POINT_1
#define 	cal_point_2 	INPUT_CAL_POINT_2
#define 	no_of_points	INPUT_NO_OF_POINTS
#define 	sensorcal 	INPUT_SENSORCAL
#define 	sensoroff 	INPUT_SENSOROFF
#define 	runningcal	INPUT_RUNNINGCAL
#define 	startcal  	INPUT_STARTCAL
#define 	resetcal  	INPUT_RESETCAL
#define 	red         	INPUT_RED
#define 	green       	INPUT_GREEN
#define 	blue        	INPUT_BLUE
#define 	blank       	INPUT_BLANK
#define 	no_of_colors	INPUT_NO_OF_COLORS
#define 	blackcolor 		INPUT_BLACKCOLOR
#define 	bluecolor  		INPUT_BLUECOLOR
#define 	greencolor 		INPUT_GREENCOLOR
#define 	yellowcolor		INPUT_YELLOWCOLOR
#define 	redcolor   		INPUT_REDCOLOR
#define 	whitecolor 		INPUT_WHITECOLOR
#define 	pincmd_dir   	INPUT_PINCMD_DIR
#define 	pincmd_set   	INPUT_PINCMD_SET
#define 	pincmd_clear 	INPUT_PINCMD_CLEAR
#define 	pincmd_read  	INPUT_PINCMD_READ
#define 	pincmd_mask  	INPUT_PINCMD_MASK
#define 	pincmd_wait  	INPUT_PINCMD_WAIT
#define 	pindir_output	INPUT_PINDIR_OUTPUT
#define 	pindir_input 	INPUT_PINDIR_INPUT
#define 	type_field           	TypeField
#define 	input_mode_field      	InputModeField
#define 	raw_value_field       	RawValueField
#define 	normalized_value_field	NormalizedValueField
#define 	scaled_value_field    	ScaledValueField
#define 	invalid_data_field    	InvalidDataField
#define 	offset_custom_zero_offset     	InputOffsetCustomZeroOffset
#define 	offset_ad_raw                	InputOffsetADRaw
#define 	offset_sensor_raw            	InputOffsetSensorRaw
#define 	offset_sensor_value          	InputOffsetSensorValue
#define 	offset_sensor_type           	InputOffsetSensorType
#define 	offset_sensor_mode           	InputOffsetSensorMode
#define 	offset_sensor_boolean        	InputOffsetSensorBoolean
#define 	offset_digi_pins_dir          	InputOffsetDigiPinsDir
#define 	offset_digi_pins_in           	InputOffsetDigiPinsIn
#define 	offset_digi_pins_out          	InputOffsetDigiPinsOut
#define 	offset_custom_pct_full_scale   	InputOffsetCustomPctFullScale
#define 	offset_custom_active_status   	InputOffsetCustomActiveStatus
#define 	offset_invalid_data          	InputOffsetInvalidData
#define 	offset_color_calibration     	InputOffsetColorCalibration
#define 	offset_color_cal_limits       	InputOffsetColorCalLimits
#define 	offset_color_ad_raw           	InputOffsetColorADRaw
#define 	offset_color_sensor_raw       	InputOffsetColorSensorRaw
#define 	offset_color_sensor_value     	InputOffsetColorSensorValue
#define 	offset_color_boolean         	InputOffsetColorBoolean
#define 	offset_color_calibration_state	InputOffsetColorCalibrationState
#define 	s1	S1
#define 	s2	S2
#define 	s3	S3
#define 	s4	S4
#define 	digi0	INPUT_DIGI0
#define 	digi1	INPUT_DIGI1
#define 	i1	IN_1
#define 	i2	IN_2
#define 	i3	IN_3
#define 	i4	IN_4
#define 	touch   		SENSOR_TOUCH
#define 	light   		SENSOR_LIGHT
#define 	rotation   		SENSOR_ROTATION
#define 	celsius   		SENSOR_CELSIUS
#define 	fahrenheit   	SENSOR_FAHRENHEIT
#define 	pulse   		SENSOR_PULSE
#define 	edge    		SENSOR_EDGE
#define 	nxtlight   		SENSOR_NXTLIGHT
#define 	sound   		SENSOR_SOUND
#define 	lowspeed_9v  	SENSOR_LOWSPEED_9V
#define 	lowspeed   		SENSOR_LOWSPEED
#define 	colorfull   	SENSOR_COLORFULL
#define 	colorred   		SENSOR_COLORRED
#define 	colorgreen   	SENSOR_COLORGREEN
#define 	colorblue   	SENSOR_COLORBLUE
#define 	colornone   	SENSOR_COLORNONE
#define 	mode_raw          	IN_MODE_RAW
#define 	mode_boolean      	IN_MODE_BOOLEAN
#define 	mode_transitioncnt	IN_MODE_TRANSITIONCNT
#define 	mode_periodcounter	IN_MODE_PERIODCOUNTER
#define 	mode_pctfullscale 	IN_MODE_PCTFULLSCALE
#define 	mode_celsius      	IN_MODE_CELSIUS
#define 	mode_fahrenheit   	IN_MODE_FAHRENHEIT
#define 	mode_anglestep    	IN_MODE_ANGLESTEP
#define 	mode_slopemask    	IN_MODE_SLOPEMASK
#define 	mode_modemask     	IN_MODE_MODEMASK
#define 	type_no_sensor     	IN_TYPE_NO_SENSOR
#define 	type_switch        	IN_TYPE_SWITCH
#define 	type_temperature   	IN_TYPE_TEMPERATURE
#define 	type_reflection    	IN_TYPE_REFLECTION
#define 	type_angle         	IN_TYPE_ANGLE
#define 	type_light_active  	IN_TYPE_LIGHT_ACTIVE
#define 	type_light_inactive	IN_TYPE_LIGHT_INACTIVE
#define 	type_sound_db      	IN_TYPE_SOUND_DB
#define 	type_sound_dba     	IN_TYPE_SOUND_DBA
#define 	type_custom        	IN_TYPE_CUSTOM
#define 	type_lowspeed      	IN_TYPE_LOWSPEED
#define 	type_lowspeed_9v   	IN_TYPE_LOWSPEED_9V
#define 	type_hispeed       	IN_TYPE_HISPEED
#define 	type_colorfull     	IN_TYPE_COLORFULL
#define 	type_colorred      	IN_TYPE_COLORRED
#define 	type_colorgreen    	IN_TYPE_COLORGREEN
#define 	type_colorblue     	IN_TYPE_COLORBLUE
#define 	type_colornone     	IN_TYPE_COLORNONE
#define 	type_colorexit     	IN_TYPE_COLOREXIT
#define 	mode_raw          IN_MODE_RAW
#define 	mode_bool         IN_MODE_BOOLEAN
#define 	mode_edge         IN_MODE_TRANSITIONCNT
#define 	mode_pulse        IN_MODE_PERIODCOUNTER
#define 	mode_percent      IN_MODE_PCTFULLSCALE
#define 	mode_celsius      IN_MODE_CELSIUS
#define 	mode_fahrenheit   IN_MODE_FAHRENHEIT
#define 	mode_rotation     IN_MODE_ANGLESTEP
#define 	type_none          	IN_TYPE_NO_SENSOR
#define 	type_touch         	IN_TYPE_SWITCH
#define 	type_temperature   	IN_TYPE_TEMPERATURE
#define 	type_light         	IN_TYPE_REFLECTION
#define 	type_rotation      	IN_TYPE_ANGLE
#define 	type_light_active  	IN_TYPE_LIGHT_ACTIVE
#define 	type_light_inactive	IN_TYPE_LIGHT_INACTIVE
#define 	type_sound_db      	IN_TYPE_SOUND_DB
#define 	type_sound_dba     	IN_TYPE_SOUND_DBA
#define 	type_custom        	IN_TYPE_CUSTOM
#define 	type_lowspeed      	IN_TYPE_LOWSPEED
#define 	type_lowspeed_9v   	IN_TYPE_LOWSPEED_9V
#define 	type_highspeed     	IN_TYPE_HISPEED
#define 	type_colorfull     	IN_TYPE_COLORFULL
#define 	type_colorred      	IN_TYPE_COLORRED
#define 	type_colorgreen    	IN_TYPE_COLORGREEN
#define 	type_colorblue     	IN_TYPE_COLORBLUE
#define 	type_colornone     	IN_TYPE_COLORNONE
#define 	custominactive	INPUT_CUSTOMINACTIVE
#define 	custom9v      	INPUT_CUSTOM9V
#define 	customactive  	INPUT_CUSTOMACTIVE
#define 	invalid_data  	INPUT_INVALID_DATA
#define		sensor__set_type(...)                		SetSensorType(__VA_ARGS__)
#define		sensor__set_mode(...)          				SetSensorMode(__VA_ARGS__)
#define		sensor__clear(...)            				ClearSensor(__VA_ARGS__)
#define		sensor__reset(...)            				ResetSensor(__VA_ARGS__)
#define		sensor__set(...)              				SetSensor(__VA_ARGS__)
#define		sensor__set_touch(...)         				SetSensorTouch(__VA_ARGS__)
#define		sensor__set_light(...)         				SetSensorLight(__VA_ARGS__)
#define		sensor__set_sound(...)         				SetSensorSound(__VA_ARGS__)
#define		sensor__set_lowspeed(...)      				SetSensorLowspeed(__VA_ARGS__)
#define		sensor__set_ultrasonic(...)    				SetSensorUltrasonic(__VA_ARGS__)
#define		sensor__set_e_meter(...)        			SetSensorEMeter(__VA_ARGS__)
#define		sensor__set_temperature(...)   				SetSensorTemperature(__VA_ARGS__)
#define		sensor__set_color_full(...)     			SetSensorColorFull(__VA_ARGS__)
#define		sensor__set_color_red(...)      			SetSensorColorRed(__VA_ARGS__)
#define		sensor__set_color_green(...)    			SetSensorColorGreen(__VA_ARGS__)
#define		sensor__set_color_blue(...)     			SetSensorColorBlue(__VA_ARGS__)
#define		sensor__set_color_none(...)     			SetSensorColorNone(__VA_ARGS__)
#define		sensor__read(...)		                	Sensor(__VA_ARGS__)
#define		sensor__boolean(...)            			SensorBoolean(__VA_ARGS__)
#define		sensor__digi_pins_direction(...)        	SensorDigiPinsDirection(__VA_ARGS__)
#define		sensor__digi_pins_output_level(...)      	SensorDigiPinsOutputLevel(__VA_ARGS__)
#define		sensor__digi_pins_status(...)           	SensorDigiPinsStatus(__VA_ARGS__)
#define		sensor__invalid(...)                  		SensorInvalid(__VA_ARGS__)
#define		sensor__mode(...)                     		SensorMode(__VA_ARGS__)
#define		sensor__normalized(...)               		SensorNormalized(__VA_ARGS__)
#define		sensor__raw(...)                      		SensorRaw(__VA_ARGS__)
#define		sensor__scaled(...)                   		SensorScaled(__VA_ARGS__)
#define		sensor__type(...)                     		SensorType(__VA_ARGS__)
#define		sensor__value(...)                    		SensorValue(__VA_ARGS__)
#define		sensor__value_bool(...)                		SensorValueBool(__VA_ARGS__)
#define		sensor__value_raw(...)                 		SensorValueRaw(__VA_ARGS__)
#define		sensor__custom_active_status(...)       	CustomSensorActiveStatus(__VA_ARGS__)
#define		sensor__custom_percent_full_scale(...)   	CustomSensorPercentFullScale(__VA_ARGS__)
#define		sensor__custom_zero_offset(...)         	CustomSensorZeroOffset(__VA_ARGS__)
#define		sensor__set_custom_active_status(...)    	SetCustomSensorActiveStatus(__VA_ARGS__)
#define		sensor__set_custom_percent_full_scale(...)	SetCustomSensorPercentFullScale(__VA_ARGS__)
#define		sensor__set_custom_zero_offset(...)      	SetCustomSensorZeroOffset(__VA_ARGS__)
#define		sensor__set_boolean(...)               		SetSensorBoolean(__VA_ARGS__)
#define		sensor__set_digi_pins_direction(...)     	SetSensorDigiPinsDirection(__VA_ARGS__)
#define		sensor__set_digi_pins_output_level(...)   	SetSensorDigiPinsOutputLevel(__VA_ARGS__)
#define		sensor__set_digi_pins_status(...)        	SetSensorDigiPinsStatus(__VA_ARGS__)
#define		sensor__sys_color_read(...)             	SysColorSensorRead(__VA_ARGS__)
#define		sensor__read_colors_ex(...)              	ReadSensorColorEx(__VA_ARGS__)
#define		sensor__read_colors_raw(...)             	ReadSensorColorRaw(__VA_ARGS__)
#define		sensor__read_color_raw(...)           		ColorSensorRaw(__VA_ARGS__)
#define		sensor__read_color_value(...)         		ColorSensorValue(__VA_ARGS__)
#define		get_input(...)                   GetInput(__VA_ARGS__)
#define		set_input(...)                   SetInput(__VA_ARGS__)
#define		color_ad_raw(...)                ColorAdRaw(__VA_ARGS__)
#define		color_boolean(...)               ColorBoolean(__VA_ARGS__)
#define		color_calibration(...)           ColorCalibration(__VA_ARGS__)
#define		color_calibration_state(...)     ColorCalibrationState(__VA_ARGS__)
#define		color_cal_limits(...)            ColorCalLimits(__VA_ARGS__)
#define		sys_input_pin_function(...)      SysInputPinFunction(__VA_ARGS__)
#define 	emeter_reg_vin   	EMETER_REG_VIN
#define 	emeter_reg_ain   	EMETER_REG_AIN
#define 	emeter_reg_vout  	EMETER_REG_VOUT
#define 	emeter_reg_aout  	EMETER_REG_AOUT
#define 	emeter_reg_joules	EMETER_REG_JOULES
#define 	emeter_reg_win   	EMETER_REG_WIN
#define 	emeter_reg_wout  	EMETER_REG_WOUT
#define 	us_cmd_off                  	US_CMD_OFF
#define 	us_cmd_singleshot           	US_CMD_SINGLESHOT
#define 	us_cmd_continuous           	US_CMD_CONTINUOUS
#define 	us_cmd_eventcapture         	US_CMD_EVENTCAPTURE
#define 	us_cmd_warmreset            	US_CMD_WARMRESET
#define 	us_reg_cm_interval          	US_REG_CM_INTERVAL
#define 	us_reg_actual_zero          	US_REG_ACTUAL_ZERO
#define 	us_reg_scale_factor         	US_REG_SCALE_FACTOR
#define 	us_reg_scale_divisor        	US_REG_SCALE_DIVISOR
#define 	us_reg_factory_actual_zero  	US_REG_FACTORY_ACTUAL_ZERO
#define 	us_reg_factory_scale_factor 	US_REG_FACTORY_SCALE_FACTOR
#define 	us_reg_factory_scale_divisor	US_REG_FACTORY_SCALE_DIVISOR
#define 	us_reg_measurement_units    	US_REG_MEASUREMENT_UNITS
#define 	temp_res_9bit     	TEMP_RES_9BIT
#define 	temp_res_10bit    	TEMP_RES_10BIT
#define 	temp_res_11bit    	TEMP_RES_11BIT
#define 	temp_res_12bit    	TEMP_RES_12BIT
#define 	temp_sd_continuous	TEMP_SD_CONTINUOUS
#define 	temp_sd_shutdown  	TEMP_SD_SHUTDOWN
#define 	temp_tm_comparator	TEMP_TM_COMPARATOR
#define 	temp_tm_interrupt 	TEMP_TM_INTERRUPT
#define 	temp_os_oneshot   	TEMP_OS_ONESHOT
#define 	temp_fq_1         	TEMP_FQ_1
#define 	temp_fq_2         	TEMP_FQ_2
#define 	temp_fq_4         	TEMP_FQ_4
#define 	temp_fq_6         	TEMP_FQ_6
#define 	temp_pol_low      	TEMP_POL_LOW
#define 	temp_pol_high     	TEMP_POL_HIGH
#define 	temp_reg_temp     	TEMP_REG_TEMP
#define 	temp_reg_config   	TEMP_REG_CONFIG
#define 	temp_reg_tlow     	TEMP_REG_TLOW
#define 	temp_reg_thigh    	TEMP_REG_THIGH
#define		sensor__read_us(...) 				SensorUS(__VA_ARGS__)
#define		sensor__read_us0(...) 				SensorUS0(__VA_ARGS__)
#define		sensor__us_wait(...) 				SensorUSWait(__VA_ARGS__)
#define		sensor__read_us_ex(...) 			ReadSensorUSEx(__VA_ARGS__)
#define		sensor__read_us_ex0(...) 			ReadSensorUSEx0(__VA_ARGS__)
#define		sensor__read_us_ex_wait(...) 		ReadSensorUSExWait(__VA_ARGS__)
#define		sensor__read_e_meter(...) 			ReadSensorEMeter(__VA_ARGS__)
#define		sensor__configure_temperature(...) 	ConfigureTemperatureSensor(__VA_ARGS__)
#define		sensor__read_temperature(...)		SensorTemperature(__VA_ARGS__)
#define 	lcd__contrast_default	DISPLAY_CONTRAST_DEFAULT
#define 	lcd__contrast_max    	DISPLAY_CONTRAST_MAX
#define 	lcd__on                 DISPLAY_ON
#define 	lcd__refresh         	DISPLAY_REFRESH
#define 	lcd__popup           	DISPLAY_POPUP
#define 	lcd__refresh_disabled	DISPLAY_REFRESH_DISABLED
#define 	lcd__busy            	DISPLAY_BUSY
#define 	offset_p_func                    DisplayOffsetPFunc
#define 	offset_erase_mask                DisplayOffsetEraseMask
#define 	offset_update_mask               DisplayOffsetUpdateMask
#define 	offset_p_font                    DisplayOffsetPFont
#define 	offset_p_text_lines              DisplayOffsetPTextLines
#define 	offset_p_status_text             DisplayOffsetPStatusText
#define 	offset_p_status_icons            DisplayOffsetPStatusIcons
#define 	offset_p_screens                 DisplayOffsetPScreens
#define 	offset_p_bitmaps                 DisplayOffsetPBitmaps
#define 	offset_p_menu_text               DisplayOffsetPMenuText
#define 	offset_p_menu_icons              DisplayOffsetPMenuIcons
#define 	offset_p_step_icons              DisplayOffsetPStepIcons
#define 	offset_display                   DisplayOffsetDisplay
#define 	offset_status_icons              DisplayOffsetStatusIcons
#define 	offset_step_icons                DisplayOffsetStepIcons
#define 	offset_flags                     DisplayOffsetFlags
#define 	offset_text_lines_center_flags   DisplayOffsetTextLinesCenterFlags
#define 	offset_normal                    DisplayOffsetNormal
#define 	offset_popup                     DisplayOffsetPopup
#define 	offset_contrast                  DisplayOffsetContrast
#define 	lcd__erase_all      		DISPLAY_ERASE_ALL
#define 	lcd__pixel          		DISPLAY_PIXEL
#define 	lcd__horizontal_line		DISPLAY_HORIZONTAL_LINE
#define 	lcd__vertical_line  		DISPLAY_VERTICAL_LINE
#define 	lcd__char           		DISPLAY_CHAR
#define 	lcd__erase_line     		DISPLAY_ERASE_LINE
#define 	lcd__fill_region    		DISPLAY_FILL_REGION
#define 	lcd__frame          		DISPLAY_FRAME
#define 	draw_opt_normal							DRAW_OPT_NORMAL
#define 	draw_opt_clear_whole_screen				DRAW_OPT_CLEAR_WHOLE_SCREEN
#define 	draw_opt_clear_except_status_screen		DRAW_OPT_CLEAR_EXCEPT_STATUS_SCREEN
#define 	draw_opt_clear_pixels					DRAW_OPT_CLEAR_PIXELS
#define 	draw_opt_clear							DRAW_OPT_CLEAR
#define 	draw_opt_invert							DRAW_OPT_INVERT
#define 	draw_opt_logical_copy					DRAW_OPT_LOGICAL_COPY
#define 	draw_opt_logical_and					DRAW_OPT_LOGICAL_AND
#define 	draw_opt_logical_or						DRAW_OPT_LOGICAL_OR
#define 	draw_opt_logical_xor					DRAW_OPT_LOGICAL_XOR
#define 	draw_opt_fill_shape						DRAW_OPT_FILL_SHAPE
#define 	draw_opt_clear_screen_modes				DRAW_OPT_CLEAR_SCREEN_MODES
#define 	draw_opt_logical_operations				DRAW_OPT_LOGICAL_OPERATIONS
#define 	draw_opt_polygon_polyline				DRAW_OPT_POLYGON_POLYLINE
#define 	draw_opt_clear_line						DRAW_OPT_CLEAR_LINE
#define 	draw_opt_clear_eol						DRAW_OPT_CLEAR_EOL
#define 	line8		LCD_LINE8
#define 	line7		LCD_LINE7
#define 	line6		LCD_LINE6
#define 	line5		LCD_LINE5
#define 	line4		LCD_LINE4
#define 	line3		LCD_LINE3
#define 	line2		LCD_LINE2
#define 	line1		LCD_LINE1
#define 	textline_1		TEXTLINE_1
#define 	textline_2		TEXTLINE_2
#define 	textline_3		TEXTLINE_3
#define 	textline_4		TEXTLINE_4
#define 	textline_5		TEXTLINE_5
#define 	textline_6		TEXTLINE_6
#define 	textline_7		TEXTLINE_7
#define 	textline_8		TEXTLINE_8
#define 	textlines 		TEXTLINES
#define 	mode_restore			SCREEN_MODE_RESTORE
#define 	mode_clear				SCREEN_MODE_CLEAR
#define 	height					DISPLAY_HEIGHT
#define 	width					DISPLAY_WIDTH
#define 	menuicons_y				DISPLAY_MENUICONS_Y
#define 	menuicons_x_offs		DISPLAY_MENUICONS_X_OFFS
#define 	menuicons_x_diff		DISPLAY_MENUICONS_X_DIFF
#define 	menuicon_left			MENUICON_LEFT
#define 	menuicon_center			MENUICON_CENTER
#define 	menuicon_right			MENUICON_RIGHT
#define 	menuicons				MENUICONS
#define 	frame_select			FRAME_SELECT
#define 	statustext				STATUSTEXT
#define 	menutext				MENUTEXT
#define 	stepline				STEPLINE
#define 	topline					TOPLINE
#define 	specials				SPECIALS
#define 	statusicon_bluetooth	STATUSICON_BLUETOOTH
#define 	statusicon_usb			STATUSICON_USB
#define 	statusicon_vm			STATUSICON_VM
#define 	statusicon_battery		STATUSICON_BATTERY
#define 	statusicons				STATUSICONS
#define 	screen_background		SCREEN_BACKGROUND
#define 	screen_large			SCREEN_LARGE
#define 	screen_small			SCREEN_SMALL
#define 	screens					SCREENS
#define 	bitmap_1				BITMAP_1
#define 	bitmap_2				BITMAP_2
#define 	bitmap_3				BITMAP_3
#define 	bitmap_4				BITMAP_4
#define 	bitmaps					BITMAPS
#define 	stepicon_1				STEPICON_1
#define 	stepicon_2				STEPICON_2
#define 	stepicon_3				STEPICON_3
#define 	stepicon_4				STEPICON_4
#define 	stepicon_5				STEPICON_5
#define 	stepicons				STEPICONS
#define     lcd__reset()                            ResetScreen()
#define     lcd__circle(...)                        CircleOut(__VA_ARGS__)
#define     lcd__line(...)                          LineOut(__VA_ARGS__)
#define     lcd__point(...)                         PointOut(__VA_ARGS__)
#define     lcd__rect(...)                          RectOut(__VA_ARGS__)
#define     lcd__print(...)                         TextOut(__VA_ARGS__)
#define     lcd__print_num(...)                     NumOut(__VA_ARGS__)
#define     lcd__ellipse(...)                       EllipseOut(__VA_ARGS__)
#define     lcd__poly(...)                          PolyOut(__VA_ARGS__)
#define     lcd__font_print(...)                    FontTextOut(__VA_ARGS__)
#define     lcd__font_print_num(...)                FontNumOut(__VA_ARGS__)
#define     lcd__graphic(...)                       GraphicOut(__VA_ARGS__)
#define     lcd__graphic_array(...)                 GraphicArrayOut(__VA_ARGS__)
#define     lcd__graphic_ex(...)                    GraphicOutEx(__VA_ARGS__)
#define     lcd__graphic_array_ex(...)              GraphicArrayOutEx(__VA_ARGS__)
#define     lcd__get_normal(...)                    GetDisplayNormal(__VA_ARGS__)
#define     lcd__set_normal(...)                    SetDisplayNormal(__VA_ARGS__)
#define     lcd__get_popup(...)                     GetDisplayPopup(__VA_ARGS__)
#define     lcd__set_popup(...)                     SetDisplayPopup(__VA_ARGS__)
#define     lcd__erase_mask(...)                    DisplayEraseMask(__VA_ARGS__)
#define     lcd__update_mask(...)                   DisplayUpdateMask(__VA_ARGS__)
#define     lcd__font(...)                          DisplayFont(__VA_ARGS__)
#define     lcd__display(...)                       DisplayDisplay(__VA_ARGS__)
#define     lcd__flags(...)                         DisplayFlags(__VA_ARGS__)
#define     lcd__text_lines_center_flags(...)       DisplayTextLinesCenterFlags(__VA_ARGS__)
#define     lcd__sys_draw_text(...)                 SysDrawText(__VA_ARGS__)
#define     lcd__sys_draw_point(...)                SysDrawPoint(__VA_ARGS__)
#define     lcd__sys_draw_line(...)                 SysDrawLine(__VA_ARGS__)
#define     lcd__sys_draw_circle(...)               SysDrawCircle(__VA_ARGS__)
#define     lcd__sys_draw_rect(...)                 SysDrawRect(__VA_ARGS__)
#define     lcd__sys_draw_graphic(...)              SysDrawGraphic(__VA_ARGS__)
#define     lcd__sys_set_mode(...)                  SysSetScreenMode(__VA_ARGS__)
#define     lcd__sys_display_execute_function(...)  SysDisplayExecuteFunction(__VA_ARGS__)
#define     lcd__contrast(...)                      DisplayContrast(__VA_ARGS__)
#define     lcd__sys_draw_graphic_array(...)        SysDrawGraphicArray(__VA_ARGS__)
#define     lcd__sys_draw_polygon(...)              SysDrawPolygon(__VA_ARGS__)
#define     lcd__sys_draw_ellipse(...)              SysDrawEllipse(__VA_ARGS__)
#define     lcd__sys_draw_font(...)                 SysDrawFont(__VA_ARGS__)
#define     lcd__clear()                         	ClearScreen()
#define     lcd__clear_line(...)                    ClearLine(__VA_ARGS__)
#define     lcd__set_font(...)                      SetDisplayFont(__VA_ARGS__)
#define     lcd__set_display(...)                   SetDisplayDisplay(__VA_ARGS__)
#define     lcd__set_erase_mask(...)                SetDisplayEraseMask(__VA_ARGS__)
#define     lcd__set_flags(...)                     SetDisplayFlags(__VA_ARGS__)
#define     lcd__set_text_lines_center_flags(...)   SetDisplayTextLinesCenterFlags(__VA_ARGS__)
#define     lcd__set_update_mask(...)               SetDisplayUpdateMask(__VA_ARGS__)
#define     lcd__set_contrast(...)                  SetDisplayContrast(__VA_ARGS__)

task main() {
	
	sensor__set_light(i1);
	long value = 0;
	while(true) {
		lcd__clear();
		value = sensor__read(i1);
		lcd__print(1, 1, "S1 = ");
		lcd__print_num(6, 1, value);
		sleep(1);
	}
}
