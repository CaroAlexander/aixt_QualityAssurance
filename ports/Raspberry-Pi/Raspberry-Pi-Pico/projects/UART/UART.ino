// This Arduino code was automatically generated by Aixt Project
// Device = RP2040
// Board = Raspberry Pi Pico
// Backend = arduino

#define led     gp25
#define uart.any_0()	Serial.available()
#define uart.any_1()	Serial1.available()
#define uart.any_x(UART_NUMBER)	uart.any_ ## UART_NUMBER ## .available()
#define SEL_UART_ANY(_0, _1, MACRO_NAME, ...) MACRO_NAME
#define uart.any(...) SEL_UART_ANY(_0 __VA_OPT__(,) __VA_ARGS__, uart.any_x, uart.any_0)(__VA_ARGS__)
#define uart.print_0(MESSAGE)	Serial.print(MESSAGE)
#define uart.print_1(MESSAGE)	Serial1.print(MESSAGE)
#define uart.print_x(UART_NUMBER, MESSAGE)		uart.print_ ## UART_NUMBER (MESSAGE)
#define SEL_uart.print(_1, _2, MACRO_NAME, ...) MACRO_NAME
#define uart.print(...) SEL_uart.print(__VA_ARGS__, uart.print_x, uart.print_0)(__VA_ARGS__)
#define uart.println_0(MESSAGE)	Serial.println(MESSAGE)
#define uart.println_1(MESSAGE)	Serial1.println(MESSAGE)
#define uart.println_x(UART_NUMBER, MESSAGE)		uart.println_ ## UART_NUMBER (MESSAGE)
#define SEL_uart.printLN(_1, _2, MACRO_NAME, ...) MACRO_NAME
#define uart.println(...) SEL_uart.printLN(__VA_ARGS__, uart.println_x, uart.println_0)(__VA_ARGS__)
#define uart.read_0()	Serial.read()
#define uart.read_1()	Serial1.read()
#define uart.read_x(UART_NUMBER)	uart.read_ ## UART_NUMBER ## .read()
#define SEL_uart.read(_0, _1, MACRO_NAME, ...) MACRO_NAME
#define uart.read(...) SEL_uart.read(_0 __VA_OPT__(,) __VA_ARGS__, uart.read_x, uart.read_0)(__VA_ARGS__)
#define uart.setup(BAUD_RATE)   Serial.begin(BAUD_RATE)
#define uart.setup_0(BAUD_RATE)					Serial.begin(BAUD_RATE)
#define uart.setup_1(BAUD_RATE)					Serial1.begin(BAUD_RATE)
#define uart.setup_x(UART_NUMBER, BAUD_RATE)		uart.setup_ ## UART_NUMBER (BAUD_RATE)
#define SEL_uart.setup(_1, _2, MACRO_NAME, ...) MACRO_NAME
#define uart.setup(...) SEL_uart.setup(__VA_ARGS__, uart.setup_x, uart.setup_0)(__VA_ARGS__)

void main__init();

void uart.init();

int32_t a = 0;

enum main____pin_names {
	gp0,
	gp1,
	gp2,
	gp3,
	gp4,
	gp5,
	gp6,
	gp7,
	gp8,
	gp9,
	gp10,
	gp11,
	gp12,
	gp13,
	gp14,
	gp15,
	gp16,
	gp17,
	gp18,
	gp19,
	gp20,
	gp21,
	gp22,
	gp23,
	gp24,
	gp25,
	gp26,
	gp27,
	gp28,
	gp29,
};

void main__init() {
	uart.init();
	
}

void uart.init() {
}

void setup() {
	main__init();
	uart.setup(9600);
}

void loop() {
	if(uart.any()) {
		a = uart.read();
		uart.println(a);
	}
}
