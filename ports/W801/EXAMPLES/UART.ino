// This Arduino code was automatically generated by Aixt Project
// Device = W801
// Board = W801
// Backend = arduino


#define time__sleep_ms(MS)    delay(MS)
#define output		OUTPUT
#define input		INPUT
#define pin__in_pullup	INPUT_PULLUP
#define pin__high(PIN_NAME)   digitalWrite(PIN_NAME, HIGH)
#define pin__low(PIN_NAME)   digitalWrite(PIN_NAME, LOW)
#define pin__read(PIN_NAME)   digitalRead(PIN_NAME)
#define pin__setup(PIN_NAME, MODE)    pinMode(PIN_NAME, MODE)
#define pin__write(PIN_NAME, VALUE)   digitalWrite(PIN_NAME, VALUE)
#define uart__any_0()	Serial.available()
#define uart__any_1()	Serial1.available()
#define uart__any_x(UART_NUMBER)	uart__any_ ## UART_NUMBER ## .available()
#define SEL_UART_ANY(_0, _1, MACRO_NAME, ...) MACRO_NAME
#define uart__any(...) SEL_UART_ANY(_0 __VA_OPT__(,) __VA_ARGS__, uart__any_x, uart__any_0)(__VA_ARGS__)
#define uart__available(MESSAGE)	Serial.available(MESSAGE)
#define uart__print_0(MESSAGE)	Serial.print(MESSAGE)
#define uart__print_1(MESSAGE)	Serial1.print(MESSAGE)
#define uart__print_x(UART_NUMBER, MESSAGE)		uart__print_ ## UART_NUMBER (MESSAGE)
#define SEL_uart.print(_1, _2, MACRO_NAME, ...) MACRO_NAME
#define uart__print(...) SEL_uart.print(__VA_ARGS__, uart__print_x, uart__print_0)(__VA_ARGS__)
#define uart__println_0(MESSAGE)	Serial.println(MESSAGE)
#define uart__println_1(MESSAGE)	Serial1.println(MESSAGE)
#define uart__println_2(MESSAGE)	Serial2.println(MESSAGE)
#define uart__println_3(MESSAGE)	Serial3.println(MESSAGE)
#define uart__println_4(MESSAGE)	Serial4.println(MESSAGE)
#define uart__println_5(MESSAGE)	Serial5.println(MESSAGE)
#define uart__println_x(UART_NUMBER, MESSAGE)		uart__println_ ## UART_NUMBER (MESSAGE)
#define SEL_uart.printLN(_1, _2, MACRO_NAME, ...) MACRO_NAME
#define uart__println(...) SEL_uart.printLN(__VA_ARGS__, uart__println_x, uart__println_0)(__VA_ARGS__)
#define uart__read_0()	Serial.read()
#define uart__read_1()	Serial1.read()
#define uart__read_x(UART_NUMBER)	uart__read_ ## UART_NUMBER ## .read()
#define SEL_uart.read(_0, _1, MACRO_NAME, ...) MACRO_NAME
#define uart__read(...) SEL_uart.read(_0 __VA_OPT__(,) __VA_ARGS__, uart__read_x, uart__read_0)(__VA_ARGS__)
#define uart__ready_0()	Serial.ready()
#define uart__ready_1()	Serial1.ready()
#define uart__ready_x(UART_NUMBER)	uart__ready_ ## UART_NUMBER ## .ready()
#define SEL_uart.readY(_0, _1, MACRO_NAME, ...) MACRO_NAME
#define uart__read(...) SEL_uart.readY(_0 __VA_OPT__(,) __VA_ARGS__, uart__ready_x, uart__ready_0)(__VA_ARGS__)
#define uart__setup_0(BAUD_RATE)					Serial.begin(BAUD_RATE)
#define uart__setup_1(BAUD_RATE)					Serial1.begin(BAUD_RATE)
#define uart__setup_x(UART_NUMBER, BAUD_RATE)		uart__setup_ ## UART_NUMBER (BAUD_RATE)
#define SEL_uart.setup(_1, _2, MACRO_NAME, ...) MACRO_NAME
#define uart__setup(...) SEL_uart.setup(__VA_ARGS__, uart__setup_x, uart__setup_0)(__VA_ARGS__)

void main__init();

void time__init();

void pin__init();

void uart__init();


enum main____pin_names {
led1 = LED_BUILTIN_1,
led2 = LED_BUILTIN_2,
led3 = LED_BUILTIN_3,
led4 = LED_BUILTIN_4,
led5 = LED_BUILTIN_5,
led6 = LED_BUILTIN_6,
led7 = LED_BUILTIN_7,
a1 = PB21,
a2 = PB22,
a3 = PB23,
a4 = PB24,
a5 = PB0,
a6 = PB1,
pin1 = PB21,
pin2 = PB22,
};


void main__init() {
}


void time__init() {
}


void pin__init() {
}


void uart__init() {
}


void setup() {
main__init();
time__init();
pin__init();
uart__init();
uart__setup(0, 9600);
pin__setup(pin1, output);
pin__setup(pin2, output);
while(true) {uart__println(0, "\r\n Comunicacion UART tarjeta W801-PC:");uart__println(0, "\r\n Oprimiendo la letra Q, activa la salida  del pin1.");pin__high(pin2);time__sleep_ms(250);pin__low(pin2);time__sleep_ms(250);int32_t x = 0;x = uart__any();if((uart__available() > 0)) {char command = ' ';command = uart__read(0);if(command == 'Q') {pin__high(pin1);time__sleep_ms(2000);pin__low(pin1);time__sleep_ms(500);}else {pin__high(pin2);time__sleep_ms(500);pin__low(pin2);time__sleep_ms(500);};};}
}