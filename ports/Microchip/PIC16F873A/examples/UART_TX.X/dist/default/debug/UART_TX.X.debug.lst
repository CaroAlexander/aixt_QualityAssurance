

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Mar 20 11:17:54 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 22/03/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F873A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     008C                     	;# 
   146     008D                     	;# 
   147     008E                     	;# 
   148     0091                     	;# 
   149     0092                     	;# 
   150     0093                     	;# 
   151     0094                     	;# 
   152     0098                     	;# 
   153     0099                     	;# 
   154     009C                     	;# 
   155     009D                     	;# 
   156     009E                     	;# 
   157     009F                     	;# 
   158     010C                     	;# 
   159     010D                     	;# 
   160     010E                     	;# 
   161     010F                     	;# 
   162     018C                     	;# 
   163     018D                     	;# 
   164     0019                     _TXREG	set	25
   165     0018                     _RCSTAbits	set	24
   166     001A                     _RCREG	set	26
   167     0087                     _TRISCbits	set	135
   168     0098                     _TXSTAbits	set	152
   169     0099                     _SPBRG	set	153
   170                           
   171                           	psect	strings
   172     0002                     __pstrings:
   173     0002                     stringtab:
   174     0002                     __stringtab:
   175     0002                     stringcode:	
   176                           ;	String table - string pointers are 1 byte each
   177                           
   178     0002                     stringdir:
   179     0002  3000               	movlw	high stringdir
   180     0003  008A               	movwf	10
   181     0004  0804               	movf	4,w
   182     0005  0A84               	incf	4,f
   183     0006  0782               	addwf	2,f
   184     0007                     __stringbase:
   185     0007  3400               	retlw	0
   186     0008                     __end_of__stringtab:
   187     0008                     STR_4:
   188     0008  3461               	retlw	97	;'a'
   189     0009  3400               	retlw	0
   190     000A                     STR_1:
   191     000A  3468               	retlw	104	;'h'
   192     000B  3400               	retlw	0
   193     000C                     STR_3:
   194     000C  346C               	retlw	108	;'l'
   195     000D  3400               	retlw	0
   196     000E                     STR_2:
   197     000E  346F               	retlw	111	;'o'
   198     000F  3400               	retlw	0
   199                           
   200                           	psect	cinit
   201     07FD                     start_initialization:	
   202                           ; #config settings
   203                           
   204     07FD                     __initialization:
   205     07FD                     end_of_initialization:	
   206                           ;End of C runtime variable initialization code
   207                           
   208     07FD                     __end_of__initialization:
   209     07FD  0183               	clrf	3
   210     07FE  118A  2FA5         	ljmp	_main	;jump to C main() function
   211                           
   212                           	psect	cstackCOMMON
   213     0000                     __pcstackCOMMON:
   214     0000                     ??_pin__init:
   215     0000                     ??_uart__init:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0000                     ??_time__init:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0000                     ??_main__init:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0000                     ??_uart__setup:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0000                     ??_uart__write:	
   228                           ; 1 bytes @ 0x0
   229                           
   230                           
   231                           	psect	cstackBANK0
   232     0020                     __pcstackBANK0:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0020                     ?_pin__init:
   236     0020                     ?_uart__init:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0020                     ?_time__init:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0020                     ?_main__init:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0020                     ?_uart__setup:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0020                     ?_uart__write:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0020                     ?_main:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0020                     uart__write@data:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           ; 1 bytes @ 0x0
   259     0020                     	ds	1
   260     0021                     ??_main:
   261                           
   262                           ; 1 bytes @ 0x1
   263     0021                     	ds	3
   264                           
   265                           	psect	maintext
   266     07A5                     __pmaintext:	
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 128 in file "uart_tx.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2, status,0, pclath, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : B00/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0   BANK1
   286 ;;      Params:         0       0       0
   287 ;;      Locals:         0       0       0
   288 ;;      Temps:          0       3       0
   289 ;;      Totals:         0       3       0
   290 ;;Total ram usage:        3 bytes
   291 ;; Hardware stack levels required when called: 2
   292 ;; This function calls:
   293 ;;		_main__init
   294 ;;		_uart__setup
   295 ;;		_uart__write
   296 ;; This function is called by:
   297 ;;		Startup code after reset
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301     07A5                     _main:	
   302                           ;psect for function _main
   303                           
   304     07A5                     l703:	
   305                           ;incstack = 0
   306                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   307                           
   308                           
   309                           ;uart_tx.c: 129:  main__init();
   310     07A5  118A  2789  118A   	fcall	_main__init
   311     07A8                     l705:
   312                           
   313                           ;uart_tx.c: 130:  TRISCbits.TRISC6 = 0;
   314     07A8  1683               	bsf	3,5	;RP0=1, select bank1
   315     07A9  1303               	bcf	3,6	;RP1=0, select bank1
   316     07AA  1307               	bcf	7,6	;volatile
   317     07AB                     l707:
   318                           
   319                           ;uart_tx.c: 131:  uart__setup();
   320     07AB  118A  2793  118A   	fcall	_uart__setup
   321     07AE                     l709:
   322                           
   323                           ;uart_tx.c: 133:   uart__write("h");
   324     07AE  3003               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   325     07AF  118A  2783  118A   	fcall	_uart__write
   326     07B2                     l711:
   327                           
   328                           ;uart_tx.c: 134:   _delay((unsigned long)((500)*(8000000/4000.0)));
   329     07B2  3006               	movlw	6
   330     07B3  1283               	bcf	3,5	;RP0=0, select bank0
   331     07B4  1303               	bcf	3,6	;RP1=0, select bank0
   332     07B5  00A3               	movwf	??_main+2
   333     07B6  3013               	movlw	19
   334     07B7  00A2               	movwf	??_main+1
   335     07B8  30AD               	movlw	173
   336     07B9  00A1               	movwf	??_main
   337     07BA                     u17:
   338     07BA  0BA1               	decfsz	??_main,f
   339     07BB  2FBA               	goto	u17
   340     07BC  0BA2               	decfsz	??_main+1,f
   341     07BD  2FBA               	goto	u17
   342     07BE  0BA3               	decfsz	??_main+2,f
   343     07BF  2FBA               	goto	u17
   344     07C0  0000               	nop
   345                           
   346                           ;uart_tx.c: 135:   uart__write("o");
   347     07C1  3007               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   348     07C2  118A  2783  118A   	fcall	_uart__write
   349     07C5                     l713:
   350                           
   351                           ;uart_tx.c: 136:   _delay((unsigned long)((500)*(8000000/4000.0)));
   352     07C5  3006               	movlw	6
   353     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   354     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   355     07C8  00A3               	movwf	??_main+2
   356     07C9  3013               	movlw	19
   357     07CA  00A2               	movwf	??_main+1
   358     07CB  30AD               	movlw	173
   359     07CC  00A1               	movwf	??_main
   360     07CD                     u27:
   361     07CD  0BA1               	decfsz	??_main,f
   362     07CE  2FCD               	goto	u27
   363     07CF  0BA2               	decfsz	??_main+1,f
   364     07D0  2FCD               	goto	u27
   365     07D1  0BA3               	decfsz	??_main+2,f
   366     07D2  2FCD               	goto	u27
   367     07D3  0000               	nop
   368     07D4                     l715:
   369                           
   370                           ;uart_tx.c: 137:   uart__write("l");
   371     07D4  3005               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   372     07D5  118A  2783  118A   	fcall	_uart__write
   373                           
   374                           ;uart_tx.c: 138:   _delay((unsigned long)((500)*(8000000/4000.0)));
   375     07D8  3006               	movlw	6
   376     07D9  1283               	bcf	3,5	;RP0=0, select bank0
   377     07DA  1303               	bcf	3,6	;RP1=0, select bank0
   378     07DB  00A3               	movwf	??_main+2
   379     07DC  3013               	movlw	19
   380     07DD  00A2               	movwf	??_main+1
   381     07DE  30AD               	movlw	173
   382     07DF  00A1               	movwf	??_main
   383     07E0                     u37:
   384     07E0  0BA1               	decfsz	??_main,f
   385     07E1  2FE0               	goto	u37
   386     07E2  0BA2               	decfsz	??_main+1,f
   387     07E3  2FE0               	goto	u37
   388     07E4  0BA3               	decfsz	??_main+2,f
   389     07E5  2FE0               	goto	u37
   390     07E6  0000               	nop
   391     07E7                     l717:
   392                           
   393                           ;uart_tx.c: 139:   uart__write("a");
   394     07E7  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   395     07E8  118A  2783  118A   	fcall	_uart__write
   396     07EB                     l719:
   397                           
   398                           ;uart_tx.c: 140:   _delay((unsigned long)((500)*(8000000/4000.0)));
   399     07EB  3006               	movlw	6
   400     07EC  1283               	bcf	3,5	;RP0=0, select bank0
   401     07ED  1303               	bcf	3,6	;RP1=0, select bank0
   402     07EE  00A3               	movwf	??_main+2
   403     07EF  3013               	movlw	19
   404     07F0  00A2               	movwf	??_main+1
   405     07F1  30AD               	movlw	173
   406     07F2  00A1               	movwf	??_main
   407     07F3                     u47:
   408     07F3  0BA1               	decfsz	??_main,f
   409     07F4  2FF3               	goto	u47
   410     07F5  0BA2               	decfsz	??_main+1,f
   411     07F6  2FF3               	goto	u47
   412     07F7  0BA3               	decfsz	??_main+2,f
   413     07F8  2FF3               	goto	u47
   414     07F9  0000               	nop
   415     07FA  2FAE               	goto	l709
   416     07FB  118A  2800         	ljmp	start
   417     07FD                     __end_of_main:
   418                           
   419                           	psect	text1
   420     0783                     __ptext1:	
   421 ;; *************** function _uart__write *****************
   422 ;; Defined at:
   423 ;;		line 121 in file "uart_tx.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;  data            1    wreg     unsigned char 
   426 ;; Auto vars:     Size  Location     Type
   427 ;;  data            1    0[BANK0 ] unsigned char 
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1
   437 ;;      Params:         0       0       0
   438 ;;      Locals:         0       1       0
   439 ;;      Temps:          0       0       0
   440 ;;      Totals:         0       1       0
   441 ;;Total ram usage:        1 bytes
   442 ;; Hardware stack levels used: 1
   443 ;; This function calls:
   444 ;;		Nothing
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450     0783                     _uart__write:	
   451                           ;psect for function _uart__write
   452                           
   453                           
   454                           ;incstack = 0
   455                           ; Regs used in _uart__write: [wreg]
   456                           ;uart__write@data stored from wreg
   457     0783  1283               	bcf	3,5	;RP0=0, select bank0
   458     0784  1303               	bcf	3,6	;RP1=0, select bank0
   459     0785  00A0               	movwf	uart__write@data
   460     0786                     l701:
   461                           
   462                           ;uart_tx.c: 122:  TXREG = data;
   463     0786  0820               	movf	uart__write@data,w
   464     0787  0099               	movwf	25	;volatile
   465     0788                     l38:
   466     0788  0008               	return
   467     0789                     __end_of_uart__write:
   468                           
   469                           	psect	text2
   470     0793                     __ptext2:	
   471 ;; *************** function _uart__setup *****************
   472 ;; Defined at:
   473 ;;		line 110 in file "uart_tx.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1
   487 ;;      Params:         0       0       0
   488 ;;      Locals:         0       0       0
   489 ;;      Temps:          0       0       0
   490 ;;      Totals:         0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; This function calls:
   494 ;;		Nothing
   495 ;; This function is called by:
   496 ;;		_main
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500     0793                     _uart__setup:	
   501                           ;psect for function _uart__setup
   502                           
   503     0793                     l685:	
   504                           ;incstack = 0
   505                           ; Regs used in _uart__setup: [wreg]
   506                           
   507                           
   508                           ;uart_tx.c: 111:  SPBRG = ((8000000 / 9600) / 64) - 1;
   509     0793  300C               	movlw	12
   510     0794  1683               	bsf	3,5	;RP0=1, select bank1
   511     0795  1303               	bcf	3,6	;RP1=0, select bank1
   512     0796  0099               	movwf	25	;volatile
   513     0797                     l687:
   514                           
   515                           ;uart_tx.c: 112:  TXSTAbits.BRGH = 0;
   516     0797  1118               	bcf	24,2	;volatile
   517     0798                     l689:
   518                           
   519                           ;uart_tx.c: 113:  TXSTAbits.SYNC = 0;
   520     0798  1218               	bcf	24,4	;volatile
   521     0799                     l691:
   522                           
   523                           ;uart_tx.c: 114:  RCSTAbits.SPEN = 1;
   524     0799  1283               	bcf	3,5	;RP0=0, select bank0
   525     079A  1303               	bcf	3,6	;RP1=0, select bank0
   526     079B  1798               	bsf	24,7	;volatile
   527     079C                     l693:
   528                           
   529                           ;uart_tx.c: 115:  TXSTAbits.TX9 = 0;
   530     079C  1683               	bsf	3,5	;RP0=1, select bank1
   531     079D  1303               	bcf	3,6	;RP1=0, select bank1
   532     079E  1318               	bcf	24,6	;volatile
   533     079F                     l695:
   534                           
   535                           ;uart_tx.c: 116:  TXSTAbits.TXEN = 1;
   536     079F  1698               	bsf	24,5	;volatile
   537     07A0                     l697:
   538                           
   539                           ;uart_tx.c: 117:  RCSTAbits.RC9 = 0;
   540     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   541     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   542     07A2  1318               	bcf	24,6	;volatile
   543     07A3                     l699:
   544                           
   545                           ;uart_tx.c: 118:  RCSTAbits.CREN = 1;
   546     07A3  1618               	bsf	24,4	;volatile
   547     07A4                     l35:
   548     07A4  0008               	return
   549     07A5                     __end_of_uart__setup:
   550                           
   551                           	psect	text3
   552     0789                     __ptext3:	
   553 ;; *************** function _main__init *****************
   554 ;; Defined at:
   555 ;;		line 93 in file "uart_tx.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		status,2, status,0, pclath, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0   BANK1
   569 ;;      Params:         0       0       0
   570 ;;      Locals:         0       0       0
   571 ;;      Temps:          0       0       0
   572 ;;      Totals:         0       0       0
   573 ;;Total ram usage:        0 bytes
   574 ;; Hardware stack levels used: 1
   575 ;; Hardware stack levels required when called: 1
   576 ;; This function calls:
   577 ;;		_pin__init
   578 ;;		_time__init
   579 ;;		_uart__init
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585     0789                     _main__init:	
   586                           ;psect for function _main__init
   587                           
   588     0789                     l683:	
   589                           ;incstack = 0
   590                           ; Regs used in _main__init: [status,2+status,0+pclath+cstack]
   591                           
   592                           
   593                           ;uart_tx.c: 94:  pin__init();
   594     0789  118A  2780  118A   	fcall	_pin__init
   595                           
   596                           ;uart_tx.c: 95:  uart__init();
   597     078C  118A  2782  118A   	fcall	_uart__init
   598                           
   599                           ;uart_tx.c: 96:  time__init();
   600     078F  118A  2781  118A   	fcall	_time__init
   601     0792                     l23:
   602     0792  0008               	return
   603     0793                     __end_of_main__init:
   604                           
   605                           	psect	text4
   606     0782                     __ptext4:	
   607 ;; *************** function _uart__init *****************
   608 ;; Defined at:
   609 ;;		line 103 in file "uart_tx.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		None
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1
   623 ;;      Params:         0       0       0
   624 ;;      Locals:         0       0       0
   625 ;;      Temps:          0       0       0
   626 ;;      Totals:         0       0       0
   627 ;;Total ram usage:        0 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_main__init
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636     0782                     _uart__init:	
   637                           ;psect for function _uart__init
   638                           
   639     0782                     l29:	
   640                           ;incstack = 0
   641                           ; Regs used in _uart__init: []
   642                           
   643     0782  0008               	return
   644     0783                     __end_of_uart__init:
   645                           
   646                           	psect	text5
   647     0781                     __ptext5:	
   648 ;; *************** function _time__init *****************
   649 ;; Defined at:
   650 ;;		line 125 in file "uart_tx.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		None
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1
   664 ;;      Params:         0       0       0
   665 ;;      Locals:         0       0       0
   666 ;;      Temps:          0       0       0
   667 ;;      Totals:         0       0       0
   668 ;;Total ram usage:        0 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_main__init
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677     0781                     _time__init:	
   678                           ;psect for function _time__init
   679                           
   680     0781                     l41:	
   681                           ;incstack = 0
   682                           ; Regs used in _time__init: []
   683                           
   684     0781  0008               	return
   685     0782                     __end_of_time__init:
   686                           
   687                           	psect	text6
   688     0780                     __ptext6:	
   689 ;; *************** function _pin__init *****************
   690 ;; Defined at:
   691 ;;		line 100 in file "uart_tx.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		None
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0   BANK1
   705 ;;      Params:         0       0       0
   706 ;;      Locals:         0       0       0
   707 ;;      Temps:          0       0       0
   708 ;;      Totals:         0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used: 1
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_main__init
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718     0780                     _pin__init:	
   719                           ;psect for function _pin__init
   720                           
   721     0780                     l26:	
   722                           ;incstack = 0
   723                           ; Regs used in _pin__init: []
   724                           
   725     0780  0008               	return
   726     0781                     __end_of_pin__init:
   727     007E                     btemp	set	126	;btemp
   728     007E                     wtemp0	set	126
   729                           
   730                           	psect	config
   731                           
   732                           ;Config register CONFIG @ 0x2007
   733                           ;	Oscillator Selection bits
   734                           ;	FOSC = HS, HS oscillator
   735                           ;	Watchdog Timer Enable bit
   736                           ;	WDTE = OFF, WDT disabled
   737                           ;	Power-up Timer Enable bit
   738                           ;	PWRTE = OFF, PWRT disabled
   739                           ;	Brown-out Reset Enable bit
   740                           ;	BOREN = OFF, BOR disabled
   741                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   742                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   743                           ;	Data EEPROM Memory Code Protection bit
   744                           ;	CPD = OFF, Data EEPROM code protection off
   745                           ;	Flash Program Memory Write Enable bits
   746                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   747                           ;	In-Circuit Debugger Mode bit
   748                           ;	DEBUG = 0x1, unprogrammed default
   749                           ;	Flash Program Memory Code Protection bit
   750                           ;	CP = OFF, Code protection off
   751     2007                     	org	8199
   752     2007  3F3A               	dw	16186

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94      4       4
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_uart__write

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      22
                                              1 BANK0      3     3      0
                         _main__init
                        _uart__setup
                        _uart__write
 ---------------------------------------------------------------------------------
 (1) _uart__write                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart__setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main__init                                           0     0      0       0
                          _pin__init
                         _time__init
                         _uart__init
 ---------------------------------------------------------------------------------
 (2) _uart__init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _time__init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pin__init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _main__init
     _pin__init
     _time__init
     _uart__init
   _uart__setup
   _uart__write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E      4       4       4        4.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Mar 20 11:17:54 2024

                      pc 0002                       l23 0792                       l41 0781  
                     l26 0780                       l35 07A4                       l29 0782  
                     l38 0788                       u17 07BA                       u27 07CD  
                     u37 07E0                       u47 07F3                       fsr 0004  
                    l701 0786                      l711 07B2                      l703 07A5  
                    l713 07C5                      l705 07A8                      l715 07D4  
                    l707 07AB                      l717 07E7                      l709 07AE  
                    l719 07EB                      l683 0789                      l691 0799  
                    l693 079C                      l685 0793                      l695 079F  
                    l687 0797                      l697 07A0                      l689 0798  
                    l699 07A3                     STR_1 000A                     STR_2 000E  
                   STR_3 000C                     STR_4 0008                     _main 07A5  
                   btemp 007E                     start 0000                    ?_main 0020  
                  _RCREG 001A                    _SPBRG 0099                    _TXREG 0019  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FD             __end_of_main 07FD                   ??_main 0021  
           ?_uart__setup 0020             ?_uart__write 0020  __end_of__initialization 07FD  
         __pcstackCOMMON 0000               __pmaintext 07A5               __stringtab 0002  
             _main__init 0789                  __ptext1 0783                  __ptext2 0793  
                __ptext3 0789                  __ptext4 0782                  __ptext5 0781  
                __ptext6 0780        __end_of_pin__init 0781     end_of_initialization 07FD  
              _RCSTAbits 0018               _time__init 0781               _uart__init 0782  
              _TRISCbits 0087              ?_main__init 0020                _TXSTAbits 0098  
    start_initialization 07FD              ?_time__init 0020              ?_uart__init 0020  
              ___latbits 0001            __pcstackBANK0 0020                __pstrings 0002  
        uart__write@data 0020                _pin__init 0780            ??_uart__setup 0000  
            __stringbase 0007            ??_uart__write 0000             ??_main__init 0000  
             ?_pin__init 0020       __end_of__stringtab 0008       __end_of_main__init 0793  
    __end_of_uart__setup 07A5      __end_of_uart__write 0789             ??_time__init 0000  
           ??_uart__init 0000       __end_of_time__init 0782       __end_of_uart__init 0783  
            ??_pin__init 0000                stringcode 0002              _uart__setup 0793  
            _uart__write 0783                 stringdir 0002                 stringtab 0002  
