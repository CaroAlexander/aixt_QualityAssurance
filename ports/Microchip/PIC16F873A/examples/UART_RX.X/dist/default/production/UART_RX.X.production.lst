

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Mar 20 09:07:32 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F873A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     008C                     	;# 
   145     008D                     	;# 
   146     008E                     	;# 
   147     0091                     	;# 
   148     0092                     	;# 
   149     0093                     	;# 
   150     0094                     	;# 
   151     0098                     	;# 
   152     0099                     	;# 
   153     009C                     	;# 
   154     009D                     	;# 
   155     009E                     	;# 
   156     009F                     	;# 
   157     010C                     	;# 
   158     010D                     	;# 
   159     010E                     	;# 
   160     010F                     	;# 
   161     018C                     	;# 
   162     018D                     	;# 
   163     0006                     _PORTB	set	6
   164     0018                     _RCSTAbits	set	24
   165     001A                     _RCREG	set	26
   166     0087                     _TRISCbits	set	135
   167     0086                     _TRISB	set	134
   168     0098                     _TXSTAbits	set	152
   169     0099                     _SPBRG	set	153
   170                           
   171                           	psect	cinit
   172     07FD                     start_initialization:	
   173                           ; #config settings
   174                           
   175     07FD                     __initialization:
   176     07FD                     end_of_initialization:	
   177                           ;End of C runtime variable initialization code
   178                           
   179     07FD                     __end_of__initialization:
   180     07FD  0183               	clrf	3
   181     07FE  118A  2FE5         	ljmp	_main	;jump to C main() function
   182                           
   183                           	psect	cstackCOMMON
   184     0000                     __pcstackCOMMON:
   185     0000                     ??_port__init:
   186     0000                     ??_uart__init:	
   187                           ; 1 bytes @ 0x0
   188                           
   189     0000                     ??_pin__init:	
   190                           ; 1 bytes @ 0x0
   191                           
   192     0000                     ??_main__init:	
   193                           ; 1 bytes @ 0x0
   194                           
   195     0000                     ??_uart__read:	
   196                           ; 1 bytes @ 0x0
   197                           
   198     0000                     ??_uart__setup:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0000                     ??_main:	
   202                           ; 1 bytes @ 0x0
   203                           
   204                           
   205                           	psect	cstackBANK0
   206     0000                     __pcstackBANK0:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0000                     ?_port__init:
   210     0000                     ?_uart__init:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0000                     ?_pin__init:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0000                     ?_main__init:	
   217                           ; 1 bytes @ 0x0
   218                           
   219     0000                     ?_uart__read:	
   220                           ; 1 bytes @ 0x0
   221                           
   222     0000                     ?_uart__setup:	
   223                           ; 1 bytes @ 0x0
   224                           
   225     0000                     ?_main:	
   226                           ; 1 bytes @ 0x0
   227                           
   228                           
   229                           	psect	maintext
   230     07E5                     __pmaintext:	
   231                           ; 1 bytes @ 0x0
   232 ;;
   233 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   234 ;;
   235 ;; *************** function _main *****************
   236 ;; Defined at:
   237 ;;		line 125 in file "uart_rx.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0, pclath, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : B00/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMMON   BANK0   BANK1
   251 ;;      Params:         0       0       0
   252 ;;      Locals:         0       0       0
   253 ;;      Temps:          0       0       0
   254 ;;      Totals:         0       0       0
   255 ;;Total ram usage:        0 bytes
   256 ;; Hardware stack levels required when called: 2
   257 ;; This function calls:
   258 ;;		_main__init
   259 ;;		_uart__read
   260 ;;		_uart__setup
   261 ;; This function is called by:
   262 ;;		Startup code after reset
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266     07E5                     _main:	
   267                           ;psect for function _main
   268                           
   269     07E5                     l694:	
   270                           ;incstack = 0
   271                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   272                           
   273                           
   274                           ;uart_rx.c: 126:  main__init();
   275     07E5  118A  27C9  118A   	fcall	_main__init
   276     07E8                     l696:
   277                           
   278                           ;uart_rx.c: 127:  TRISB = 0b00000000;
   279     07E8  1683               	bsf	3,5	;RP0=1, select bank1
   280     07E9  1303               	bcf	3,6	;RP1=0, select bank1
   281     07EA  0186               	clrf	6	;volatile
   282     07EB                     l698:
   283                           
   284                           ;uart_rx.c: 128:  PORTB = 0b00000000;
   285     07EB  1283               	bcf	3,5	;RP0=0, select bank0
   286     07EC  1303               	bcf	3,6	;RP1=0, select bank0
   287     07ED  0186               	clrf	6	;volatile
   288     07EE                     l700:
   289                           
   290                           ;uart_rx.c: 129:  TRISCbits.TRISC7 = 1;
   291     07EE  1683               	bsf	3,5	;RP0=1, select bank1
   292     07EF  1303               	bcf	3,6	;RP1=0, select bank1
   293     07F0  1787               	bsf	7,7	;volatile
   294     07F1                     l702:
   295                           
   296                           ;uart_rx.c: 130:  uart__setup();
   297     07F1  118A  27D3  118A   	fcall	_uart__setup
   298     07F4                     l704:
   299                           
   300                           ;uart_rx.c: 132:   PORTB = uart__read();
   301     07F4  118A  27C5  118A   	fcall	_uart__read
   302     07F7  1283               	bcf	3,5	;RP0=0, select bank0
   303     07F8  1303               	bcf	3,6	;RP1=0, select bank0
   304     07F9  0086               	movwf	6	;volatile
   305     07FA  2FF4               	goto	l704
   306     07FB  118A  2800         	ljmp	start
   307     07FD                     __end_of_main:
   308                           
   309                           	psect	text1
   310     07D3                     __ptext1:	
   311 ;; *************** function _uart__setup *****************
   312 ;; Defined at:
   313 ;;		line 111 in file "uart_rx.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMMON   BANK0   BANK1
   327 ;;      Params:         0       0       0
   328 ;;      Locals:         0       0       0
   329 ;;      Temps:          0       0       0
   330 ;;      Totals:         0       0       0
   331 ;;Total ram usage:        0 bytes
   332 ;; Hardware stack levels used: 1
   333 ;; This function calls:
   334 ;;		Nothing
   335 ;; This function is called by:
   336 ;;		_main
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340     07D3                     _uart__setup:	
   341                           ;psect for function _uart__setup
   342                           
   343     07D3                     l678:	
   344                           ;incstack = 0
   345                           ; Regs used in _uart__setup: [wreg]
   346                           
   347                           
   348                           ;uart_rx.c: 112:  SPBRG = ((8000000 / 9600) / 64) - 1;
   349     07D3  300C               	movlw	12
   350     07D4  1683               	bsf	3,5	;RP0=1, select bank1
   351     07D5  1303               	bcf	3,6	;RP1=0, select bank1
   352     07D6  0099               	movwf	25	;volatile
   353     07D7                     l680:
   354                           
   355                           ;uart_rx.c: 113:  TXSTAbits.BRGH = 0;
   356     07D7  1118               	bcf	24,2	;volatile
   357     07D8                     l682:
   358                           
   359                           ;uart_rx.c: 114:  TXSTAbits.SYNC = 0;
   360     07D8  1218               	bcf	24,4	;volatile
   361     07D9                     l684:
   362                           
   363                           ;uart_rx.c: 115:  RCSTAbits.SPEN = 1;
   364     07D9  1283               	bcf	3,5	;RP0=0, select bank0
   365     07DA  1303               	bcf	3,6	;RP1=0, select bank0
   366     07DB  1798               	bsf	24,7	;volatile
   367     07DC                     l686:
   368                           
   369                           ;uart_rx.c: 116:  TXSTAbits.TX9 = 0;
   370     07DC  1683               	bsf	3,5	;RP0=1, select bank1
   371     07DD  1303               	bcf	3,6	;RP1=0, select bank1
   372     07DE  1318               	bcf	24,6	;volatile
   373     07DF                     l688:
   374                           
   375                           ;uart_rx.c: 117:  TXSTAbits.TXEN = 1;
   376     07DF  1698               	bsf	24,5	;volatile
   377     07E0                     l690:
   378                           
   379                           ;uart_rx.c: 118:  RCSTAbits.RC9 = 0;
   380     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   381     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   382     07E2  1318               	bcf	24,6	;volatile
   383     07E3                     l692:
   384                           
   385                           ;uart_rx.c: 119:  RCSTAbits.CREN = 1;
   386     07E3  1618               	bsf	24,4	;volatile
   387     07E4                     l35:
   388     07E4  0008               	return
   389     07E5                     __end_of_uart__setup:
   390                           
   391                           	psect	text2
   392     07C5                     __ptext2:	
   393 ;; *************** function _uart__read *****************
   394 ;; Defined at:
   395 ;;		line 107 in file "uart_rx.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      unsigned char 
   402 ;; Registers used:
   403 ;;		wreg
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0   BANK1
   409 ;;      Params:         0       0       0
   410 ;;      Locals:         0       0       0
   411 ;;      Temps:          0       0       0
   412 ;;      Totals:         0       0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels used: 1
   415 ;; This function calls:
   416 ;;		Nothing
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422     07C5                     _uart__read:	
   423                           ;psect for function _uart__read
   424                           
   425     07C5                     l674:	
   426                           ;incstack = 0
   427                           ; Regs used in _uart__read: [wreg]
   428                           
   429                           
   430                           ;uart_rx.c: 108:  return RCREG;
   431     07C5  1283               	bcf	3,5	;RP0=0, select bank0
   432     07C6  1303               	bcf	3,6	;RP1=0, select bank0
   433     07C7  081A               	movf	26,w	;volatile
   434     07C8                     l32:
   435     07C8  0008               	return
   436     07C9                     __end_of_uart__read:
   437                           
   438                           	psect	text3
   439     07C9                     __ptext3:	
   440 ;; *************** function _main__init *****************
   441 ;; Defined at:
   442 ;;		line 94 in file "uart_rx.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		status,2, status,0, pclath, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1
   456 ;;      Params:         0       0       0
   457 ;;      Locals:         0       0       0
   458 ;;      Temps:          0       0       0
   459 ;;      Totals:         0       0       0
   460 ;;Total ram usage:        0 bytes
   461 ;; Hardware stack levels used: 1
   462 ;; Hardware stack levels required when called: 1
   463 ;; This function calls:
   464 ;;		_pin__init
   465 ;;		_port__init
   466 ;;		_uart__init
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472     07C9                     _main__init:	
   473                           ;psect for function _main__init
   474                           
   475     07C9                     l672:	
   476                           ;incstack = 0
   477                           ; Regs used in _main__init: [status,2+status,0+pclath+cstack]
   478                           
   479                           
   480                           ;uart_rx.c: 95:  port__init();
   481     07C9  118A  27C3  118A   	fcall	_port__init
   482                           
   483                           ;uart_rx.c: 96:  uart__init();
   484     07CC  118A  27C4  118A   	fcall	_uart__init
   485                           
   486                           ;uart_rx.c: 97:  pin__init();
   487     07CF  118A  27C2  118A   	fcall	_pin__init
   488     07D2                     l23:
   489     07D2  0008               	return
   490     07D3                     __end_of_main__init:
   491                           
   492                           	psect	text4
   493     07C4                     __ptext4:	
   494 ;; *************** function _uart__init *****************
   495 ;; Defined at:
   496 ;;		line 104 in file "uart_rx.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		None
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1
   510 ;;      Params:         0       0       0
   511 ;;      Locals:         0       0       0
   512 ;;      Temps:          0       0       0
   513 ;;      Totals:         0       0       0
   514 ;;Total ram usage:        0 bytes
   515 ;; Hardware stack levels used: 1
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		_main__init
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523     07C4                     _uart__init:	
   524                           ;psect for function _uart__init
   525                           
   526     07C4                     l29:	
   527                           ;incstack = 0
   528                           ; Regs used in _uart__init: []
   529                           
   530     07C4  0008               	return
   531     07C5                     __end_of_uart__init:
   532                           
   533                           	psect	text5
   534     07C3                     __ptext5:	
   535 ;; *************** function _port__init *****************
   536 ;; Defined at:
   537 ;;		line 101 in file "uart_rx.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		None
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0   BANK1
   551 ;;      Params:         0       0       0
   552 ;;      Locals:         0       0       0
   553 ;;      Temps:          0       0       0
   554 ;;      Totals:         0       0       0
   555 ;;Total ram usage:        0 bytes
   556 ;; Hardware stack levels used: 1
   557 ;; This function calls:
   558 ;;		Nothing
   559 ;; This function is called by:
   560 ;;		_main__init
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564     07C3                     _port__init:	
   565                           ;psect for function _port__init
   566                           
   567     07C3                     l26:	
   568                           ;incstack = 0
   569                           ; Regs used in _port__init: []
   570                           
   571     07C3  0008               	return
   572     07C4                     __end_of_port__init:
   573                           
   574                           	psect	text6
   575     07C2                     __ptext6:	
   576 ;; *************** function _pin__init *****************
   577 ;; Defined at:
   578 ;;		line 122 in file "uart_rx.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		None
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1
   592 ;;      Params:         0       0       0
   593 ;;      Locals:         0       0       0
   594 ;;      Temps:          0       0       0
   595 ;;      Totals:         0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_main__init
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605     07C2                     _pin__init:	
   606                           ;psect for function _pin__init
   607                           
   608     07C2                     l38:	
   609                           ;incstack = 0
   610                           ; Regs used in _pin__init: []
   611                           
   612     07C2  0008               	return
   613     07C3                     __end_of_pin__init:
   614     007E                     btemp	set	126	;btemp
   615     007E                     wtemp0	set	126
   616                           
   617                           	psect	config
   618                           
   619                           ;Config register CONFIG @ 0x2007
   620                           ;	Oscillator Selection bits
   621                           ;	FOSC = HS, HS oscillator
   622                           ;	Watchdog Timer Enable bit
   623                           ;	WDTE = OFF, WDT disabled
   624                           ;	Power-up Timer Enable bit
   625                           ;	PWRTE = OFF, PWRT disabled
   626                           ;	Brown-out Reset Enable bit
   627                           ;	BOREN = OFF, BOR disabled
   628                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   629                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   630                           ;	Data EEPROM Memory Code Protection bit
   631                           ;	CPD = OFF, Data EEPROM code protection off
   632                           ;	Flash Program Memory Write Enable bits
   633                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   634                           ;	In-Circuit Debugger Mode bit
   635                           ;	DEBUG = 0x1, unprogrammed default
   636                           ;	Flash Program Memory Code Protection bit
   637                           ;	CP = OFF, Code protection off
   638     2007                     	org	8199
   639     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94      0       0
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _main__init
                         _uart__read
                        _uart__setup
 ---------------------------------------------------------------------------------
 (1) _uart__setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart__read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main__init                                           0     0      0       0
                          _pin__init
                         _port__init
                         _uart__init
 ---------------------------------------------------------------------------------
 (2) _uart__init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _port__init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pin__init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _main__init
     _pin__init
     _port__init
     _uart__init
   _uart__read
   _uart__setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Mar 20 09:07:32 2024

                     l23 07D2                       l32 07C8                       l26 07C3  
                     l35 07E4                       l29 07C4                       l38 07C2  
                    l700 07EE                      l702 07F1                      l704 07F4  
                    l672 07C9                      l680 07D7                      l674 07C5  
                    l690 07E0                      l682 07D8                      l692 07E3  
                    l684 07D9                      l686 07DC                      l678 07D3  
                    l694 07E5                      l688 07DF                      l696 07E8  
                    l698 07EB                     _main 07E5                     btemp 007E  
                   start 0000                    ?_main 0000                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _TRISB 0086  
                  status 0003                    wtemp0 007E          __initialization 07FD  
           __end_of_main 07FD                   ??_main 0000             ?_uart__setup 0000  
__end_of__initialization 07FD           __pcstackCOMMON 0000               __pmaintext 07E5  
             _main__init 07C9                  __ptext1 07D3                  __ptext2 07C5  
                __ptext3 07C9                  __ptext4 07C4                  __ptext5 07C3  
                __ptext6 07C2        __end_of_pin__init 07C3     end_of_initialization 07FD  
              _RCSTAbits 0018               _uart__init 07C4               _uart__read 07C5  
             _port__init 07C3                _TRISCbits 0087              ?_main__init 0000  
              _TXSTAbits 0098      start_initialization 07FD              ?_uart__init 0000  
            ?_uart__read 0000              ?_port__init 0000                ___latbits 0001  
          __pcstackBANK0 0000                _pin__init 07C2            ??_uart__setup 0000  
           ??_main__init 0000               ?_pin__init 0000       __end_of_main__init 07D3  
    __end_of_uart__setup 07E5             ??_uart__init 0000             ??_uart__read 0000  
           ??_port__init 0000       __end_of_uart__init 07C5       __end_of_uart__read 07C9  
            ??_pin__init 0000       __end_of_port__init 07C4              _uart__setup 07D3  
