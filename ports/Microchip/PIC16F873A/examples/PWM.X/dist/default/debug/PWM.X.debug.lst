

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Mar 20 03:54:31 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 22/03/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F873A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0098                     	;# 
   154     0099                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     001F                     _ADCON0	set	31
   166     0012                     _T2CONbits	set	18
   167     0011                     _TMR2	set	17
   168     001D                     _CCP2CON	set	29
   169     0012                     _T2CON	set	18
   170     001B                     _CCPR2L	set	27
   171     001E                     _ADRESH	set	30
   172     001F                     _ADCON0bits	set	31
   173     009F                     _ADCON1	set	159
   174     0087                     _TRISCbits	set	135
   175     0092                     _PR2	set	146
   176     009E                     _ADRESL	set	158
   177                           
   178                           	psect	cinit
   179     07FD                     start_initialization:	
   180                           ; #config settings
   181                           
   182     07FD                     __initialization:
   183     07FD                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     07FD                     __end_of__initialization:
   187     07FD  0183               	clrf	3
   188     07FE  118A  2F1A         	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191     0000                     __pcstackCOMMON:
   192     0000                     ??_adc__init:
   193     0000                     ??_pwm__init:	
   194                           ; 1 bytes @ 0x0
   195                           
   196     0000                     ??_main__init:	
   197                           ; 1 bytes @ 0x0
   198                           
   199     0000                     ??_pwm__setup:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0000                     ??_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0000                     ??___wmul:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0000                     ??___awdiv:	
   209                           ; 1 bytes @ 0x0
   210                           
   211                           
   212                           	psect	cstackBANK0
   213     0020                     __pcstackBANK0:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0020                     ?_adc__init:
   217     0020                     ?_pwm__init:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0020                     ?_main__init:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0020                     ?_pwm__setup:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0020                     ?_pwm__write:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0020                     ?_main:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0020                     ?_adc__read:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0020                     ?___wmul:	
   236                           ; 2 bytes @ 0x0
   237                           
   238     0020                     adc__read@channel:	
   239                           ; 2 bytes @ 0x0
   240                           
   241     0020                     ___wmul@multiplier:	
   242                           ; 2 bytes @ 0x0
   243                           
   244                           
   245                           ; 2 bytes @ 0x0
   246     0020                     	ds	2
   247     0022                     ??_adc__read:
   248     0022                     ___wmul@multiplicand:	
   249                           ; 1 bytes @ 0x2
   250                           
   251                           
   252                           ; 2 bytes @ 0x2
   253     0022                     	ds	2
   254     0024                     ___wmul@product:
   255                           
   256                           ; 2 bytes @ 0x4
   257     0024                     	ds	2
   258     0026                     ?___awdiv:
   259     0026                     ___awdiv@divisor:	
   260                           ; 2 bytes @ 0x6
   261                           
   262                           
   263                           ; 2 bytes @ 0x6
   264     0026                     	ds	2
   265     0028                     ___awdiv@dividend:
   266                           
   267                           ; 2 bytes @ 0x8
   268     0028                     	ds	2
   269     002A                     ___awdiv@counter:
   270                           
   271                           ; 1 bytes @ 0xA
   272     002A                     	ds	1
   273     002B                     ___awdiv@sign:
   274                           
   275                           ; 1 bytes @ 0xB
   276     002B                     	ds	1
   277     002C                     ___awdiv@quotient:
   278                           
   279                           ; 2 bytes @ 0xC
   280     002C                     	ds	2
   281     002E                     ??_pwm__write:
   282                           
   283                           ; 1 bytes @ 0xE
   284     002E                     	ds	2
   285     0030                     pwm__write@duty:
   286                           
   287                           ; 1 bytes @ 0x10
   288     0030                     	ds	1
   289     0031                     pwm__write@pwm:
   290                           
   291                           ; 1 bytes @ 0x11
   292     0031                     	ds	1
   293     0032                     main@valor:
   294                           
   295                           ; 4 bytes @ 0x12
   296     0032                     	ds	4
   297                           
   298                           	psect	maintext
   299     071A                     __pmaintext:	
   300 ;;
   301 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   302 ;;
   303 ;; *************** function _main *****************
   304 ;; Defined at:
   305 ;;		line 118 in file "pwm.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;  valor           4   18[BANK0 ] long 
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   314 ;; Tracked objects:
   315 ;;		On entry : B00/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMMON   BANK0   BANK1
   319 ;;      Params:         0       0       0
   320 ;;      Locals:         0       4       0
   321 ;;      Temps:          0       0       0
   322 ;;      Totals:         0       4       0
   323 ;;Total ram usage:        4 bytes
   324 ;; Hardware stack levels required when called: 2
   325 ;; This function calls:
   326 ;;		_adc__read
   327 ;;		_main__init
   328 ;;		_pwm__setup
   329 ;;		_pwm__write
   330 ;; This function is called by:
   331 ;;		Startup code after reset
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335     071A                     _main:	
   336                           ;psect for function _main
   337                           
   338     071A                     l835:	
   339                           ;incstack = 0
   340                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   341                           
   342                           
   343                           ;pwm.c: 119:  main__init();
   344     071A  118A  26E6  118A   	fcall	_main__init
   345     071D                     l837:
   346                           
   347                           ;pwm.c: 120:  ADCON1 = 0b10000000; ADCON0 = 0b11001000; ADCON0bits.ADON = 1;;
   348     071D  3080               	movlw	128
   349     071E  1683               	bsf	3,5	;RP0=1, select bank1
   350     071F  1303               	bcf	3,6	;RP1=0, select bank1
   351     0720  009F               	movwf	31	;volatile
   352     0721                     l839:
   353     0721  30C8               	movlw	200
   354     0722  1283               	bcf	3,5	;RP0=0, select bank0
   355     0723  1303               	bcf	3,6	;RP1=0, select bank0
   356     0724  009F               	movwf	31	;volatile
   357     0725                     l841:
   358     0725  141F               	bsf	31,0	;volatile
   359     0726                     l843:
   360                           
   361                           ;pwm.c: 121:  pwm__setup();
   362     0726  118A  26ED  118A   	fcall	_pwm__setup
   363     0729                     l54:	
   364                           ;pwm.c: 122:  while(1) {
   365                           
   366     0729                     l845:
   367                           
   368                           ;pwm.c: 124:   valor = adc__read(0);
   369     0729  3000               	movlw	0
   370     072A  1283               	bcf	3,5	;RP0=0, select bank0
   371     072B  1303               	bcf	3,6	;RP1=0, select bank0
   372     072C  00A0               	movwf	adc__read@channel
   373     072D  00A1               	movwf	adc__read@channel+1
   374     072E  118A  2700  118A   	fcall	_adc__read
   375     0731  1283               	bcf	3,5	;RP0=0, select bank0
   376     0732  1303               	bcf	3,6	;RP1=0, select bank0
   377     0733  0820               	movf	?_adc__read,w
   378     0734  00B2               	movwf	main@valor
   379     0735  0821               	movf	?_adc__read+1,w
   380     0736  00B3               	movwf	main@valor+1
   381     0737  01B4               	clrf	main@valor+2
   382     0738  01B5               	clrf	main@valor+3
   383     0739                     l847:
   384                           
   385                           ;pwm.c: 125:   pwm__write(valor);
   386     0739  0832               	movf	main@valor,w
   387     073A  118A  2767  118A   	fcall	_pwm__write
   388     073D  2F29               	goto	l54
   389     073E  118A  2800         	ljmp	start
   390     0740                     __end_of_main:
   391                           
   392                           	psect	text1
   393     0767                     __ptext1:	
   394 ;; *************** function _pwm__write *****************
   395 ;; Defined at:
   396 ;;		line 113 in file "pwm.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;  duty            1    wreg     unsigned char 
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  duty            1   16[BANK0 ] unsigned char 
   401 ;;  pwm             1   17[BANK0 ] unsigned char 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1
   411 ;;      Params:         0       0       0
   412 ;;      Locals:         0       2       0
   413 ;;      Temps:          0       2       0
   414 ;;      Totals:         0       4       0
   415 ;;Total ram usage:        4 bytes
   416 ;; Hardware stack levels used: 1
   417 ;; Hardware stack levels required when called: 1
   418 ;; This function calls:
   419 ;;		___awdiv
   420 ;;		___wmul
   421 ;; This function is called by:
   422 ;;		_main
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426     0767                     _pwm__write:	
   427                           ;psect for function _pwm__write
   428                           
   429                           
   430                           ;incstack = 0
   431                           ; Regs used in _pwm__write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   432                           ;pwm__write@duty stored from wreg
   433     0767  1283               	bcf	3,5	;RP0=0, select bank0
   434     0768  1303               	bcf	3,6	;RP1=0, select bank0
   435     0769  00B0               	movwf	pwm__write@duty
   436     076A                     l831:
   437                           
   438                           ;pwm.c: 114:  unsigned char pwm = ((duty - 0) * (60 - 0) / (256 - 0) + 0);
   439     076A  3000               	movlw	0
   440     076B  00A6               	movwf	___awdiv@divisor
   441     076C  3001               	movlw	1
   442     076D  00A7               	movwf	___awdiv@divisor+1
   443     076E  0830               	movf	pwm__write@duty,w
   444     076F  00AE               	movwf	??_pwm__write
   445     0770  01AF               	clrf	??_pwm__write+1
   446     0771  082E               	movf	??_pwm__write,w
   447     0772  00A0               	movwf	___wmul@multiplier
   448     0773  082F               	movf	??_pwm__write+1,w
   449     0774  00A1               	movwf	___wmul@multiplier+1
   450     0775  303C               	movlw	60
   451     0776  00A2               	movwf	___wmul@multiplicand
   452     0777  3000               	movlw	0
   453     0778  00A3               	movwf	___wmul@multiplicand+1
   454     0779  118A  2740  118A   	fcall	___wmul
   455     077C  1283               	bcf	3,5	;RP0=0, select bank0
   456     077D  1303               	bcf	3,6	;RP1=0, select bank0
   457     077E  0821               	movf	?___wmul+1,w
   458     077F  00A9               	movwf	___awdiv@dividend+1
   459     0780  0820               	movf	?___wmul,w
   460     0781  00A8               	movwf	___awdiv@dividend
   461     0782  118A  2794  118A   	fcall	___awdiv
   462     0785  1283               	bcf	3,5	;RP0=0, select bank0
   463     0786  1303               	bcf	3,6	;RP1=0, select bank0
   464     0787  0826               	movf	?___awdiv,w
   465     0788  00B1               	movwf	pwm__write@pwm
   466     0789                     l833:
   467                           
   468                           ;pwm.c: 115:  CCPR2L = (pwm >> 2);
   469     0789  0831               	movf	pwm__write@pwm,w
   470     078A  00AE               	movwf	??_pwm__write
   471     078B  3002               	movlw	2
   472     078C                     u325:
   473     078C  1003               	clrc
   474     078D  0CAE               	rrf	??_pwm__write,f
   475     078E  3EFF               	addlw	-1
   476     078F  1D03               	skipz
   477     0790  2F8C               	goto	u325
   478     0791  082E               	movf	??_pwm__write,w
   479     0792  009B               	movwf	27	;volatile
   480     0793                     l49:
   481     0793  0008               	return
   482     0794                     __end_of_pwm__write:
   483                           
   484                           	psect	text2
   485     0740                     __ptext2:	
   486 ;; *************** function ___wmul *****************
   487 ;; Defined at:
   488 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  multiplier      2    0[BANK0 ] unsigned int 
   491 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  product         2    4[BANK0 ] unsigned int 
   494 ;; Return value:  Size  Location     Type
   495 ;;                  2    0[BANK0 ] unsigned int 
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1
   503 ;;      Params:         0       4       0
   504 ;;      Locals:         0       2       0
   505 ;;      Temps:          0       0       0
   506 ;;      Totals:         0       6       0
   507 ;;Total ram usage:        6 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		_pwm__write
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516     0740                     ___wmul:	
   517                           ;psect for function ___wmul
   518                           
   519     0740                     l749:	
   520                           ;incstack = 0
   521                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   522                           
   523     0740  1283               	bcf	3,5	;RP0=0, select bank0
   524     0741  1303               	bcf	3,6	;RP1=0, select bank0
   525     0742  01A4               	clrf	___wmul@product
   526     0743  01A5               	clrf	___wmul@product+1
   527     0744                     l751:
   528     0744  1C20               	btfss	___wmul@multiplier,0
   529     0745  2F47               	goto	u171
   530     0746  2F48               	goto	u170
   531     0747                     u171:
   532     0747  2F4E               	goto	l143
   533     0748                     u170:
   534     0748                     l753:
   535     0748  0822               	movf	___wmul@multiplicand,w
   536     0749  07A4               	addwf	___wmul@product,f
   537     074A  1803               	skipnc
   538     074B  0AA5               	incf	___wmul@product+1,f
   539     074C  0823               	movf	___wmul@multiplicand+1,w
   540     074D  07A5               	addwf	___wmul@product+1,f
   541     074E                     l143:
   542     074E  3001               	movlw	1
   543     074F                     u185:
   544     074F  1003               	clrc
   545     0750  0DA2               	rlf	___wmul@multiplicand,f
   546     0751  0DA3               	rlf	___wmul@multiplicand+1,f
   547     0752  3EFF               	addlw	-1
   548     0753  1D03               	skipz
   549     0754  2F4F               	goto	u185
   550     0755                     l755:
   551     0755  3001               	movlw	1
   552     0756                     u195:
   553     0756  1003               	clrc
   554     0757  0CA1               	rrf	___wmul@multiplier+1,f
   555     0758  0CA0               	rrf	___wmul@multiplier,f
   556     0759  3EFF               	addlw	-1
   557     075A  1D03               	skipz
   558     075B  2F56               	goto	u195
   559     075C                     l757:
   560     075C  0820               	movf	___wmul@multiplier,w
   561     075D  0421               	iorwf	___wmul@multiplier+1,w
   562     075E  1D03               	btfss	3,2
   563     075F  2F61               	goto	u201
   564     0760  2F62               	goto	u200
   565     0761                     u201:
   566     0761  2F44               	goto	l751
   567     0762                     u200:
   568     0762                     l759:
   569     0762  0825               	movf	___wmul@product+1,w
   570     0763  00A1               	movwf	?___wmul+1
   571     0764  0824               	movf	___wmul@product,w
   572     0765  00A0               	movwf	?___wmul
   573     0766                     l145:
   574     0766  0008               	return
   575     0767                     __end_of___wmul:
   576                           
   577                           	psect	text3
   578     0794                     __ptext3:	
   579 ;; *************** function ___awdiv *****************
   580 ;; Defined at:
   581 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  divisor         2    6[BANK0 ] int 
   584 ;;  dividend        2    8[BANK0 ] int 
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  quotient        2   12[BANK0 ] int 
   587 ;;  sign            1   11[BANK0 ] unsigned char 
   588 ;;  counter         1   10[BANK0 ] unsigned char 
   589 ;; Return value:  Size  Location     Type
   590 ;;                  2    6[BANK0 ] int 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0, btemp+1
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1
   598 ;;      Params:         0       4       0
   599 ;;      Locals:         0       4       0
   600 ;;      Temps:          0       0       0
   601 ;;      Totals:         0       8       0
   602 ;;Total ram usage:        8 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_pwm__write
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611     0794                     ___awdiv:	
   612                           ;psect for function ___awdiv
   613                           
   614     0794                     l763:	
   615                           ;incstack = 0
   616                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
   617                           
   618     0794  1283               	bcf	3,5	;RP0=0, select bank0
   619     0795  1303               	bcf	3,6	;RP1=0, select bank0
   620     0796  01AB               	clrf	___awdiv@sign
   621     0797                     l765:
   622     0797  1FA7               	btfss	___awdiv@divisor+1,7
   623     0798  2F9A               	goto	u211
   624     0799  2F9B               	goto	u210
   625     079A                     u211:
   626     079A  2FA2               	goto	l771
   627     079B                     u210:
   628     079B                     l767:
   629     079B  09A6               	comf	___awdiv@divisor,f
   630     079C  09A7               	comf	___awdiv@divisor+1,f
   631     079D  0AA6               	incf	___awdiv@divisor,f
   632     079E  1903               	skipnz
   633     079F  0AA7               	incf	___awdiv@divisor+1,f
   634     07A0                     l769:
   635     07A0  01AB               	clrf	___awdiv@sign
   636     07A1  0AAB               	incf	___awdiv@sign,f
   637     07A2                     l771:
   638     07A2  1FA9               	btfss	___awdiv@dividend+1,7
   639     07A3  2FA5               	goto	u221
   640     07A4  2FA6               	goto	u220
   641     07A5                     u221:
   642     07A5  2FAF               	goto	l777
   643     07A6                     u220:
   644     07A6                     l773:
   645     07A6  09A8               	comf	___awdiv@dividend,f
   646     07A7  09A9               	comf	___awdiv@dividend+1,f
   647     07A8  0AA8               	incf	___awdiv@dividend,f
   648     07A9  1903               	skipnz
   649     07AA  0AA9               	incf	___awdiv@dividend+1,f
   650     07AB                     l775:
   651     07AB  3001               	movlw	1
   652     07AC  00FF               	movwf	btemp+1
   653     07AD  087F               	movf	btemp+1,w
   654     07AE  06AB               	xorwf	___awdiv@sign,f
   655     07AF                     l777:
   656     07AF  01AC               	clrf	___awdiv@quotient
   657     07B0  01AD               	clrf	___awdiv@quotient+1
   658     07B1                     l779:
   659     07B1  0826               	movf	___awdiv@divisor,w
   660     07B2  0427               	iorwf	___awdiv@divisor+1,w
   661     07B3  1903               	btfsc	3,2
   662     07B4  2FB6               	goto	u231
   663     07B5  2FB7               	goto	u230
   664     07B6                     u231:
   665     07B6  2FEE               	goto	l799
   666     07B7                     u230:
   667     07B7                     l781:
   668     07B7  01AA               	clrf	___awdiv@counter
   669     07B8  0AAA               	incf	___awdiv@counter,f
   670     07B9  2FC5               	goto	l787
   671     07BA                     l783:
   672     07BA  3001               	movlw	1
   673     07BB                     u245:
   674     07BB  1003               	clrc
   675     07BC  0DA6               	rlf	___awdiv@divisor,f
   676     07BD  0DA7               	rlf	___awdiv@divisor+1,f
   677     07BE  3EFF               	addlw	-1
   678     07BF  1D03               	skipz
   679     07C0  2FBB               	goto	u245
   680     07C1                     l785:
   681     07C1  3001               	movlw	1
   682     07C2  00FF               	movwf	btemp+1
   683     07C3  087F               	movf	btemp+1,w
   684     07C4  07AA               	addwf	___awdiv@counter,f
   685     07C5                     l787:
   686     07C5  1FA7               	btfss	___awdiv@divisor+1,7
   687     07C6  2FC8               	goto	u251
   688     07C7  2FC9               	goto	u250
   689     07C8                     u251:
   690     07C8  2FBA               	goto	l783
   691     07C9                     u250:
   692     07C9                     l789:
   693     07C9  3001               	movlw	1
   694     07CA                     u265:
   695     07CA  1003               	clrc
   696     07CB  0DAC               	rlf	___awdiv@quotient,f
   697     07CC  0DAD               	rlf	___awdiv@quotient+1,f
   698     07CD  3EFF               	addlw	-1
   699     07CE  1D03               	skipz
   700     07CF  2FCA               	goto	u265
   701     07D0  0827               	movf	___awdiv@divisor+1,w
   702     07D1  0229               	subwf	___awdiv@dividend+1,w
   703     07D2  1D03               	skipz
   704     07D3  2FD6               	goto	u275
   705     07D4  0826               	movf	___awdiv@divisor,w
   706     07D5  0228               	subwf	___awdiv@dividend,w
   707     07D6                     u275:
   708     07D6  1C03               	skipc
   709     07D7  2FD9               	goto	u271
   710     07D8  2FDA               	goto	u270
   711     07D9                     u271:
   712     07D9  2FE1               	goto	l795
   713     07DA                     u270:
   714     07DA                     l791:
   715     07DA  0826               	movf	___awdiv@divisor,w
   716     07DB  02A8               	subwf	___awdiv@dividend,f
   717     07DC  0827               	movf	___awdiv@divisor+1,w
   718     07DD  1C03               	skipc
   719     07DE  03A9               	decf	___awdiv@dividend+1,f
   720     07DF  02A9               	subwf	___awdiv@dividend+1,f
   721     07E0                     l793:
   722     07E0  142C               	bsf	___awdiv@quotient,0
   723     07E1                     l795:
   724     07E1  3001               	movlw	1
   725     07E2                     u285:
   726     07E2  1003               	clrc
   727     07E3  0CA7               	rrf	___awdiv@divisor+1,f
   728     07E4  0CA6               	rrf	___awdiv@divisor,f
   729     07E5  3EFF               	addlw	-1
   730     07E6  1D03               	skipz
   731     07E7  2FE2               	goto	u285
   732     07E8                     l797:
   733     07E8  3001               	movlw	1
   734     07E9  02AA               	subwf	___awdiv@counter,f
   735     07EA  1D03               	btfss	3,2
   736     07EB  2FED               	goto	u291
   737     07EC  2FEE               	goto	u290
   738     07ED                     u291:
   739     07ED  2FC9               	goto	l789
   740     07EE                     u290:
   741     07EE                     l799:
   742     07EE  082B               	movf	___awdiv@sign,w
   743     07EF  1903               	btfsc	3,2
   744     07F0  2FF2               	goto	u301
   745     07F1  2FF3               	goto	u300
   746     07F2                     u301:
   747     07F2  2FF8               	goto	l803
   748     07F3                     u300:
   749     07F3                     l801:
   750     07F3  09AC               	comf	___awdiv@quotient,f
   751     07F4  09AD               	comf	___awdiv@quotient+1,f
   752     07F5  0AAC               	incf	___awdiv@quotient,f
   753     07F6  1903               	skipnz
   754     07F7  0AAD               	incf	___awdiv@quotient+1,f
   755     07F8                     l803:
   756     07F8  082D               	movf	___awdiv@quotient+1,w
   757     07F9  00A7               	movwf	?___awdiv+1
   758     07FA  082C               	movf	___awdiv@quotient,w
   759     07FB  00A6               	movwf	?___awdiv
   760     07FC                     l296:
   761     07FC  0008               	return
   762     07FD                     __end_of___awdiv:
   763                           
   764                           	psect	text4
   765     06ED                     __ptext4:	
   766 ;; *************** function _pwm__setup *****************
   767 ;; Defined at:
   768 ;;		line 103 in file "pwm.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, status,2
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1
   782 ;;      Params:         0       0       0
   783 ;;      Locals:         0       0       0
   784 ;;      Temps:          0       0       0
   785 ;;      Totals:         0       0       0
   786 ;;Total ram usage:        0 bytes
   787 ;; Hardware stack levels used: 1
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795     06ED                     _pwm__setup:	
   796                           ;psect for function _pwm__setup
   797                           
   798     06ED                     l817:	
   799                           ;incstack = 0
   800                           ; Regs used in _pwm__setup: [wreg+status,2]
   801                           
   802                           
   803                           ;pwm.c: 104:  PR2 = 0x3E;
   804     06ED  303E               	movlw	62
   805     06EE  1683               	bsf	3,5	;RP0=1, select bank1
   806     06EF  1303               	bcf	3,6	;RP1=0, select bank1
   807     06F0  0092               	movwf	18	;volatile
   808     06F1                     l819:
   809                           
   810                           ;pwm.c: 105:  CCPR2L = 0;
   811     06F1  1283               	bcf	3,5	;RP0=0, select bank0
   812     06F2  1303               	bcf	3,6	;RP1=0, select bank0
   813     06F3  019B               	clrf	27	;volatile
   814     06F4                     l821:
   815                           
   816                           ;pwm.c: 106:  TRISCbits.TRISC1 = 0;
   817     06F4  1683               	bsf	3,5	;RP0=1, select bank1
   818     06F5  1303               	bcf	3,6	;RP1=0, select bank1
   819     06F6  1087               	bcf	7,1	;volatile
   820     06F7                     l823:
   821                           
   822                           ;pwm.c: 107:  T2CON = 0b00000011;
   823     06F7  3003               	movlw	3
   824     06F8  1283               	bcf	3,5	;RP0=0, select bank0
   825     06F9  1303               	bcf	3,6	;RP1=0, select bank0
   826     06FA  0092               	movwf	18	;volatile
   827     06FB                     l825:
   828                           
   829                           ;pwm.c: 108:  CCP2CON = 0b00001100;
   830     06FB  300C               	movlw	12
   831     06FC  009D               	movwf	29	;volatile
   832     06FD                     l827:
   833                           
   834                           ;pwm.c: 109:  TMR2 = 0;
   835     06FD  0191               	clrf	17	;volatile
   836     06FE                     l829:
   837                           
   838                           ;pwm.c: 110:  T2CONbits.TMR2ON = 1;
   839     06FE  1512               	bsf	18,2	;volatile
   840     06FF                     l46:
   841     06FF  0008               	return
   842     0700                     __end_of_pwm__setup:
   843                           
   844                           	psect	text5
   845     06E6                     __ptext5:	
   846 ;; *************** function _main__init *****************
   847 ;; Defined at:
   848 ;;		line 83 in file "pwm.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		status,2, status,0, pclath, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1
   862 ;;      Params:         0       0       0
   863 ;;      Locals:         0       0       0
   864 ;;      Temps:          0       0       0
   865 ;;      Totals:         0       0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; Hardware stack levels required when called: 1
   869 ;; This function calls:
   870 ;;		_adc__init
   871 ;;		_pwm__init
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877     06E6                     _main__init:	
   878                           ;psect for function _main__init
   879                           
   880     06E6                     l807:	
   881                           ;incstack = 0
   882                           ; Regs used in _main__init: [status,2+status,0+pclath+cstack]
   883                           
   884                           
   885                           ;pwm.c: 84:  adc__init();
   886     06E6  118A  26E4  118A   	fcall	_adc__init
   887                           
   888                           ;pwm.c: 85:  pwm__init();
   889     06E9  118A  26E5  118A   	fcall	_pwm__init
   890     06EC                     l31:
   891     06EC  0008               	return
   892     06ED                     __end_of_main__init:
   893                           
   894                           	psect	text6
   895     06E5                     __ptext6:	
   896 ;; *************** function _pwm__init *****************
   897 ;; Defined at:
   898 ;;		line 100 in file "pwm.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		None
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1
   912 ;;      Params:         0       0       0
   913 ;;      Locals:         0       0       0
   914 ;;      Temps:          0       0       0
   915 ;;      Totals:         0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used: 1
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_main__init
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925     06E5                     _pwm__init:	
   926                           ;psect for function _pwm__init
   927                           
   928     06E5                     l43:	
   929                           ;incstack = 0
   930                           ; Regs used in _pwm__init: []
   931                           
   932     06E5  0008               	return
   933     06E6                     __end_of_pwm__init:
   934                           
   935                           	psect	text7
   936     06E4                     __ptext7:	
   937 ;; *************** function _adc__init *****************
   938 ;; Defined at:
   939 ;;		line 89 in file "pwm.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		None
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1
   953 ;;      Params:         0       0       0
   954 ;;      Locals:         0       0       0
   955 ;;      Temps:          0       0       0
   956 ;;      Totals:         0       0       0
   957 ;;Total ram usage:        0 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_main__init
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966     06E4                     _adc__init:	
   967                           ;psect for function _adc__init
   968                           
   969     06E4                     l34:	
   970                           ;incstack = 0
   971                           ; Regs used in _adc__init: []
   972                           
   973     06E4  0008               	return
   974     06E5                     __end_of_adc__init:
   975                           
   976                           	psect	text8
   977     0700                     __ptext8:	
   978 ;; *************** function _adc__read *****************
   979 ;; Defined at:
   980 ;;		line 92 in file "pwm.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;  channel         2    0[BANK0 ] unsigned int 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  2    0[BANK0 ] unsigned int 
   987 ;; Registers used:
   988 ;;		wreg, status,2, status,0
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1
   994 ;;      Params:         0       2       0
   995 ;;      Locals:         0       0       0
   996 ;;      Temps:          0       1       0
   997 ;;      Totals:         0       3       0
   998 ;;Total ram usage:        3 bytes
   999 ;; Hardware stack levels used: 1
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007     0700                     _adc__read:	
  1008                           ;psect for function _adc__read
  1009                           
  1010     0700                     l809:	
  1011                           ;incstack = 0
  1012                           ; Regs used in _adc__read: [wreg+status,2+status,0]
  1013                           
  1014                           
  1015                           ;pwm.c: 93:  ADCON0bits.CHS = channel;
  1016     0700  1283               	bcf	3,5	;RP0=0, select bank0
  1017     0701  1303               	bcf	3,6	;RP1=0, select bank0
  1018     0702  0820               	movf	adc__read@channel,w
  1019     0703  00A2               	movwf	??_adc__read
  1020     0704  0DA2               	rlf	??_adc__read,f
  1021     0705  0DA2               	rlf	??_adc__read,f
  1022     0706  0DA2               	rlf	??_adc__read,f
  1023     0707  081F               	movf	31,w	;volatile
  1024     0708  0622               	xorwf	??_adc__read,w
  1025     0709  39C7               	andlw	-57
  1026     070A  0622               	xorwf	??_adc__read,w
  1027     070B  009F               	movwf	31	;volatile
  1028     070C                     l811:
  1029                           
  1030                           ;pwm.c: 94:  ADCON0bits.GO_DONE = 1;
  1031     070C  151F               	bsf	31,2	;volatile
  1032     070D                     l37:	
  1033                           ;pwm.c: 96:  }
  1034                           
  1035                           
  1036                           ;pwm.c: 95:  while(ADCON0bits.GO_DONE == 1) {
  1037     070D  191F               	btfsc	31,2	;volatile
  1038     070E  2F10               	goto	u311
  1039     070F  2F11               	goto	u310
  1040     0710                     u311:
  1041     0710  2F0D               	goto	l37
  1042     0711                     u310:
  1043     0711                     l813:
  1044                           
  1045                           ;pwm.c: 97:  return (ADRESH << 8) | ADRESL;
  1046     0711  081E               	movf	30,w	;volatile
  1047     0712  00A1               	movwf	?_adc__read+1
  1048     0713  1683               	bsf	3,5	;RP0=1, select bank1
  1049     0714  1303               	bcf	3,6	;RP1=0, select bank1
  1050     0715  081E               	movf	30,w	;volatile
  1051     0716  1283               	bcf	3,5	;RP0=0, select bank0
  1052     0717  1303               	bcf	3,6	;RP1=0, select bank0
  1053     0718  00A0               	movwf	?_adc__read
  1054     0719                     l40:
  1055     0719  0008               	return
  1056     071A                     __end_of_adc__read:
  1057     007E                     btemp	set	126	;btemp
  1058     007E                     wtemp0	set	126
  1059                           
  1060                           	psect	config
  1061                           
  1062                           ;Config register CONFIG @ 0x2007
  1063                           ;	Oscillator Selection bits
  1064                           ;	FOSC = HS, HS oscillator
  1065                           ;	Watchdog Timer Enable bit
  1066                           ;	WDTE = OFF, WDT disabled
  1067                           ;	Power-up Timer Enable bit
  1068                           ;	PWRTE = OFF, PWRT disabled
  1069                           ;	Brown-out Reset Enable bit
  1070                           ;	BOREN = OFF, BOR disabled
  1071                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1072                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1073                           ;	Data EEPROM Memory Code Protection bit
  1074                           ;	CPD = OFF, Data EEPROM code protection off
  1075                           ;	Flash Program Memory Write Enable bits
  1076                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1077                           ;	In-Circuit Debugger Mode bit
  1078                           ;	DEBUG = 0x1, unprogrammed default
  1079                           ;	Flash Program Memory Code Protection bit
  1080                           ;	CP = OFF, Code protection off
  1081     2007                     	org	8199
  1082     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     22      22
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_pwm__write
    _pwm__write->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     863
                                             18 BANK0      4     4      0
                          _adc__read
                         _main__init
                         _pwm__setup
                         _pwm__write
 ---------------------------------------------------------------------------------
 (1) _pwm__write                                           4     4      0     741
                                             14 BANK0      4     4      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwm__setup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main__init                                           0     0      0       0
                          _adc__init
                          _pwm__init
 ---------------------------------------------------------------------------------
 (2) _pwm__init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc__init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc__read                                            3     1      2      98
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc__read
   _main__init
     _adc__init
     _pwm__init
   _pwm__setup
   _pwm__write
     ___awdiv
       ___wmul (ARG)
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E     16      16       4       23.4%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Mar 20 03:54:31 2024

                     l31 06EC                       l40 0719                       l34 06E4  
                     l43 06E5                       l37 070D                       l46 06FF  
                     l54 0729                       l49 0793             ___awdiv@sign 002B  
    ___wmul@multiplicand 0022                      l143 074E                      l145 0766  
                    l296 07FC                      l801 07F3                      l811 070C  
                    l803 07F8                      l813 0711                      l821 06F4  
                    l807 06E6                      l823 06F7                      l751 0744  
                    l831 076A                      l809 0700                      l825 06FB  
                    l817 06ED                      l753 0748                      l833 0789  
                    l841 0725                      l827 06FD                      l819 06F1  
                    l771 07A2                      l763 0794                      l755 0755  
                    l843 0726                      l835 071A                      l829 06FE  
                    l781 07B7                      l773 07A6                      l765 0797  
                    l757 075C                      l749 0740                      l845 0729  
                    l837 071D                      l791 07DA                      l783 07BA  
                    l775 07AB                      l767 079B                      l759 0762  
                    l847 0739                      l839 0721                      l793 07E0  
                    l785 07C1                      l777 07AF                      l769 07A0  
                    l795 07E1                      l787 07C5                      l779 07B1  
                    l797 07E8                      l789 07C9                      l799 07EE  
                    u200 0762                      u201 0761                      u210 079B  
                    u211 079A                      u300 07F3                      u220 07A6  
                    u301 07F2                      u221 07A5                      u310 0711  
                    u230 07B7                      u311 0710                      u231 07B6  
                    u250 07C9                      u170 0748                      u251 07C8  
                    u171 0747                      u245 07BB                      u325 078C  
                    u270 07DA                      _PR2 0092                      u271 07D9  
                    u265 07CA                      u185 074F                      u290 07EE  
                    u291 07ED                      u275 07D6                      u195 0756  
                    u285 07E2                     _TMR2 0011                     _main 071A  
                   btemp 007E                     start 0000                    ?_main 0020  
        __end_of___awdiv 07FD          ___awdiv@divisor 0026                    _T2CON 0012  
        ___awdiv@counter 002A                    status 0003                    wtemp0 007E  
        __initialization 07FD             __end_of_main 0740                   ??_main 0000  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                   _CCPR2L 001B         ___awdiv@dividend 0028  
                 ___wmul 0740                ??___awdiv 0000         ___awdiv@quotient 002C  
__end_of__initialization 07FD           __pcstackCOMMON 0000            pwm__write@pwm 0031  
             __pmaintext 071A                  ?___wmul 0020                  _CCP2CON 001D  
      __end_of_adc__init 06E5        __end_of_adc__read 071A               _main__init 06E6  
                ___awdiv 0794                  __ptext1 0767                  __ptext2 0740  
                __ptext3 0794                  __ptext4 06ED                  __ptext5 06E6  
                __ptext6 06E5                  __ptext7 06E4                  __ptext8 0700  
              _T2CONbits 0012     end_of_initialization 07FD        __end_of_pwm__init 06E6  
              _TRISCbits 0087               _pwm__setup 06ED               _pwm__write 0767  
            ?_main__init 0020         adc__read@channel 0020           __end_of___wmul 0767  
    start_initialization 07FD           pwm__write@duty 0030                 ??___wmul 0000  
              ___latbits 0001            __pcstackBANK0 0020              ?_pwm__setup 0020  
              _adc__init 06E4                _adc__read 0700              ?_pwm__write 0020  
               ?___awdiv 0026               ?_adc__init 0020               ?_adc__read 0020  
         ___wmul@product 0024                _pwm__init 06E5               _ADCON0bits 001F  
      ___wmul@multiplier 0020                main@valor 0032             ??_main__init 0000  
             ?_pwm__init 0020       __end_of_main__init 06ED              ??_adc__init 0000  
            ??_adc__read 0022             ??_pwm__setup 0000             ??_pwm__write 002E  
     __end_of_pwm__setup 0700       __end_of_pwm__write 0794              ??_pwm__init 0000  
